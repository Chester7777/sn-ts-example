{"ast":null,"code":"import{applyMiddleware,combineReducers,createStore}from\"redux\";import profilePageReducer from\"./profilePage-reducer\";import dialogsPageReducer from\"./dialogsPage-reducer\";import sidebarReducer from\"./sidebar-reducer\";import usersReducer from\"./users-reducer\";import authReducer from\"./auth-reducer\";import thunkMiddleware from\"redux-thunk\";import{reducer as formReducer}from\"redux-form\";import appReducer from\"./app-reducer\";// функция combineReducers склеивает reducer, тоесть создает state\nvar reducers=combineReducers({profilePage:profilePageReducer,dialogsPage:dialogsPageReducer,sidebar:sidebarReducer,usersPage:usersReducer,auth:authReducer,form:formReducer,app:appReducer});// функция создает store\nvar store=createStore(reducers,applyMiddleware(thunkMiddleware));export default store;// @ts-ignore\nwindow.store=store;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/Redux-store.ts"],"names":["applyMiddleware","combineReducers","createStore","profilePageReducer","dialogsPageReducer","sidebarReducer","usersReducer","authReducer","thunkMiddleware","reducer","formReducer","appReducer","reducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","app","store","window"],"mappings":"AAAA,OAAQA,eAAR,CAAyBC,eAAzB,CAA0CC,WAA1C,KAAmE,OAAnE,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,aAA5B,CACA,OAASC,OAAO,GAAIC,CAAAA,WAApB,KAAuC,YAAvC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAEA;AACA,GAAIC,CAAAA,QAAQ,CAAGX,eAAe,CAAC,CAC3BY,WAAW,CAAEV,kBADc,CAE3BW,WAAW,CAAEV,kBAFc,CAG3BW,OAAO,CAAEV,cAHkB,CAI3BW,SAAS,CAAEV,YAJgB,CAK3BW,IAAI,CAAEV,WALqB,CAM3BW,IAAI,CAAER,WANqB,CAO3BS,GAAG,CAAER,UAPsB,CAAD,CAA9B,CAUA;AACA,GAAIS,CAAAA,KAAY,CAAGlB,WAAW,CAACU,QAAD,CAAWZ,eAAe,CAACQ,eAAD,CAA1B,CAA9B,CAIA,cAAeY,CAAAA,KAAf,CAEA;AACAC,MAAM,CAACD,KAAP,CAAeA,KAAf","sourcesContent":["import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n// функция combineReducers склеивает reducer, тоесть создает state\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n// функция создает store\r\nlet store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport type AllAppStateType = ReturnType<typeof reducers>\r\nexport type AppStoreType = typeof store\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store"]},"metadata":{},"sourceType":"module"}