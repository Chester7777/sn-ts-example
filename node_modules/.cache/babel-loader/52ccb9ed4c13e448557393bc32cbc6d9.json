{"ast":null,"code":"import { profileAPI } from \"../API/API\";\nconst ADD_POST = \"ADD-POST\";\nconst DELETE_POST = \"DELETE_POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\n// обьект initialState задает начальное значение state, если он не придет сразу\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hey, why nobody love me\",\n    likes: \"15\"\n  }, {\n    id: 2,\n    message: \"It`s our new program! Hey\",\n    likes: \"20\"\n  }],\n  profile: {},\n  status: \"\"\n}; // обьект initialState задает начальное значение state, если он не придет сразу\n\nconst profilePageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      const newPost = {\n        id: 3,\n        message: action.newPostText,\n        likes: \"0\"\n      };\n      return { ...state,\n        posts: [...state.posts, newPost]\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(p => p.id != action.postId)\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostsActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const deletePostsActionCreator = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfile = userId => async dispatch => {\n  let response = await profileAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profilePageReducer;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/profilePage-reducer.ts"],"names":["profileAPI","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likes","profile","status","profilePageReducer","state","action","type","newPost","newPostText","filter","p","postId","addPostsActionCreator","deletePostsActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","savePhoto"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../API/API\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likes: string\r\n}\r\ntype ContactsType = {\r\n    facebook: string,\r\n    website: null,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: null,\r\n    github: string,\r\n    mainLink: null\r\n}\r\ntype PhotosType = {\r\n    small: string,\r\n    large: string\r\n}\r\nexport type ProfilePropsType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\nexport type StatusProfileType = {\r\n    resultCode: number,\r\n    message: string,\r\n    data: {\r\n        resultCode: number\r\n        messages: string[],\r\n        data: {}\r\n    }\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hey, why nobody love me\", likes: \"15\"},\r\n        {id: 2, message: \"It`s our new program! Hey\", likes: \"20\"},\r\n    ] as Array<PostsType>,\r\n    profile: {} as ProfilePropsType,\r\n    status: \"\"\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfileActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likes: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPostsActionCreator = (newPostText: string) => ({type: ADD_POST, newPostText} as const);\r\nexport const deletePostsActionCreator = (postId: number) => ({type: DELETE_POST, postId} as const);\r\nexport const setUserProfile = (profile: ProfilePropsType) => ({type: SET_USER_PROFILE, profile} as const);\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status} as const);\r\n\r\nexport const getUserProfile = (userId: string) => async (dispatch: Dispatch<ProfileActionType>) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (status: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\n\r\ntype ProfileActionType =\r\n    ReturnType<typeof addPostsActionCreator> |\r\n    ReturnType<typeof deletePostsActionCreator> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus>\r\n\r\nexport default profilePageReducer;"]},"metadata":{},"sourceType":"module"}