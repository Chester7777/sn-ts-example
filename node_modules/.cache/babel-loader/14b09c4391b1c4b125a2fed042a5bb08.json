{"ast":null,"code":"import axios from\"axios\";var instance=axios.create({baseURL:\"https://social-network.samuraijs.com/api/1.0/\",withCredentials:true,headers:{\"API-KEY\":\"0b171657-160a-4f70-93fb-80213f27dfbf\"}});export var ResultCodesEnum;(function(ResultCodesEnum){ResultCodesEnum[ResultCodesEnum[\"Success\"]=0]=\"Success\";ResultCodesEnum[ResultCodesEnum[\"Error\"]=1]=\"Error\";ResultCodesEnum[ResultCodesEnum[\"CaptchaIsRequired\"]=10]=\"CaptchaIsRequired\";})(ResultCodesEnum||(ResultCodesEnum={}));export var usersAPI={getUsers:function getUsers(currentPage,pageSize){return instance.get(\"users?page=\".concat(currentPage,\"&count=\").concat(pageSize)).then(function(response){return response.data;});},unfollow:function unfollow(id){return instance.delete(\"follow/\".concat(id));// .then(response => response.data)\n},follow:function follow(id){return instance.post(\"follow/\".concat(id));// .then(response => response.data)\n}};//\nexport var profileAPI={getProfile:function getProfile(userId){return instance.get(\"profile/\"+userId);},getStatus:function getStatus(userId){return instance.get(\"profile/status/\"+userId);},updateStatus:function updateStatus(status){return instance.put(\"profile/status\",{status:status});}};export var authAPI={me:function me(){return instance.get(\"auth/me\");},login:function login(email,password,rememberMe){return instance.post(\"auth/login\",{email:email,password:password,rememberMe:rememberMe});},loginAuth:function loginAuth(){return instance.delete(\"auth/login\");}};","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/API/API.ts"],"names":["axios","instance","create","baseURL","withCredentials","headers","ResultCodesEnum","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","id","delete","follow","post","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","loginAuth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAKA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,OAAO,gDADmB,CAE1BC,eAAe,CAAE,IAFS,CAG1BC,OAAO,CAAE,CACL,UAAW,sCADN,CAHiB,CAAb,CAAjB,CAQA,UAAYC,CAAAA,eAAZ,C,UAAYA,e,EAAAA,e,CAAAA,e,yBAAAA,e,CAAAA,e,qBAAAA,e,CAAAA,e,iDAAAA,e,GAAAA,e,MAMZ,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CACpBC,QADoB,mBACXC,WADW,CACUC,QADV,CAC4B,CAC5C,MAAOT,CAAAA,QAAQ,CAACU,GAAT,sBAAiDF,WAAjD,mBAAsEC,QAAtE,GACFE,IADE,CACG,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADX,CAAP,CAEH,CAJmB,CAKpBC,QALoB,mBAKXC,EALW,CAKC,CACjB,MAAOf,CAAAA,QAAQ,CAACgB,MAAT,kBAAiDD,EAAjD,EAAP,CACA;AACH,CARmB,CASpBE,MAToB,iBASbF,EATa,CASD,CACf,MAAOf,CAAAA,QAAQ,CAACkB,IAAT,kBAAuCH,EAAvC,EAAP,CACA;AACH,CAZmB,CAAjB,CAcP;AAsBA,MAAO,IAAMI,CAAAA,UAAU,CAAG,CACtBC,UADsB,qBACXC,MADW,CACK,CACvB,MAAOrB,CAAAA,QAAQ,CAACU,GAAT,CAAa,WAAaW,MAA1B,CAAP,CACH,CAHqB,CAItBC,SAJsB,oBAIZD,MAJY,CAII,CACtB,MAAOrB,CAAAA,QAAQ,CAACU,GAAT,CAAqB,kBAAoBW,MAAzC,CAAP,CACH,CANqB,CAOtBE,YAPsB,uBAOTC,MAPS,CAOO,CACzB,MAAOxB,CAAAA,QAAQ,CAACyB,GAAT,kBAAkD,CAACD,MAAM,CAAEA,MAAT,CAAlD,CAAP,CACH,CATqB,CAAnB,CAkCP,MAAO,IAAME,CAAAA,OAAO,CAAG,CACnBC,EADmB,cACd,CACD,MAAO3B,CAAAA,QAAQ,CAACU,GAAT,WAAP,CACH,CAHkB,CAInBkB,KAJmB,gBAIbC,KAJa,CAIEC,QAJF,CAIoBC,UAJpB,CAIyC,CACxD,MAAO/B,CAAAA,QAAQ,CAACkB,IAAT,cAA+C,CAACW,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAkBC,UAAU,CAAVA,UAAlB,CAA/C,CAAP,CACH,CANkB,CAOnBC,SAPmB,qBAOP,CACR,MAAOhC,CAAAA,QAAQ,CAACgB,MAAT,cAAP,CACH,CATkB,CAAhB","sourcesContent":["import axios from \"axios\";\r\nimport {GetTasksResponseType} from \"../Components/Users/UsersContainer\";\r\nimport {PostPropsType} from \"../redux/auth-reducer\";\r\nimport {ProfilePropsType, StatusProfileType} from \"../redux/profilePage-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"0b171657-160a-4f70-93fb-80213f27dfbf\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<GetTasksResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<LoginAuthResponseType>(`follow/${id}`)\r\n        // .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<PostPropsType>(`follow/${id}`)\r\n        // .then(response => response.data)\r\n    }\r\n}\r\n//\r\ntype GetProfileResponseType = {\r\n    userId: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<StatusProfileType>(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\ntype MeResponseType = {\r\n    data: {\r\n        id: string\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\ntype LoginResponseType = {\r\n    data: {\r\n        userId: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\nexport type LoginAuthResponseType = {\r\n    data: {}\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`);\r\n    },\r\n    login(email: string, password: number, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    loginAuth() {\r\n        return instance.delete<LoginAuthResponseType>(`auth/login`)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}