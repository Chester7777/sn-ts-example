{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\reactProject\\\\sn-ts-example\\\\src\\\\Components\\\\Common\\\\FormsControls\\\\FormsControls.tsx\";\nimport React from \"react\";\nimport s from \"./FormControls.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormControl = ({\n  input,\n  meta,\n  children,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.formControl + \" \" + (hasError ? s.error : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n};\n_c = FormControl;\nexport const Textarea = props => {\n  const {\n    input,\n    meta,\n    children,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, { ...props,\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", { ...input,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Textarea;\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    children,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, { ...props,\n    children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n_c3 = Input;\nexport const createField = (placeholder, name, validators) => {};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"Textarea\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Common/FormsControls/FormsControls.tsx"],"names":["React","s","FormControl","input","meta","children","props","hasError","touched","error","formControl","Textarea","restProps","Input","createField","placeholder","name","validators"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,2BAAd;;AAQA,OAAO,MAAMC,WAA2C,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,QAAd;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC9F,QAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAAtC;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAER,CAAC,CAACS,WAAF,GAAgB,GAAhB,IAAuBH,QAAQ,GAAGN,CAAC,CAACQ,KAAL,GAAa,EAA5C,CAAhB;AAAA,4BACH;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,YADG,EAIFE,QAAQ,iBAAI;AAAA,gBAAOH,IAAI,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJV;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CATM;KAAMP,W;AAUb,OAAO,MAAMS,QAAqC,GAAIL,KAAD,IAAW;AAC5D,QAAM;AAACH,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,QAAd;AAAwB,OAAGO;AAA3B,MAAwCN,KAA9C;AACA,sBAAO,QAAC,WAAD,OAAiBA,KAAjB;AAAA,2BAAyB,yBAAcH,KAAd;AAAA,SAAyBS;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHM;MAAMD,Q;AAIb,OAAO,MAAME,KAAkC,GAAIP,KAAD,IAAW;AACzD,QAAM;AAACH,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,QAAd;AAAwB,OAAGO;AAA3B,MAAwCN,KAA9C;AACA,sBAAO,QAAC,WAAD,OAAiBA,KAAjB;AAAA,2BAAyB,sBAAWH,KAAX;AAAA,SAAsBS;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAJM;MAAMC,K;AAMb,OAAO,MAAMC,WAAW,GAAG,CAACC,WAAD,EAAcC,IAAd,EAAoBC,UAApB,KAAqC,CAE/D,CAFM","sourcesContent":["import React from \"react\";\r\nimport s from \"./FormControls.module.css\"\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n    input: any\r\n}\r\n\r\nexport const FormControl: React.FC<FormControlPropsType> = ({input, meta, children, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props;\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props;\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, ) => {\r\n\r\n}"]},"metadata":{},"sourceType":"module"}