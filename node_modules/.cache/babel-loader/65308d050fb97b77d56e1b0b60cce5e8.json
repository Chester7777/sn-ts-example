{"ast":null,"code":"import{applyMiddleware,combineReducers,compose,createStore}from\"redux\";import profilePageReducer from\"./profilePage-reducer\";import dialogsPageReducer from\"./dialogsPage-reducer\";import sidebarReducer from\"./sidebar-reducer\";import usersReducer from\"./users-reducer\";import authReducer from\"./auth-reducer\";import thunkMiddleware from\"redux-thunk\";import{reducer as formReducer}from\"redux-form\";import appReducer from\"./app-reducer\";// функция combineReducers склеивает reducer, тоесть создает state\nvar reducers=combineReducers({profilePage:profilePageReducer,dialogsPage:dialogsPageReducer,sidebar:sidebarReducer,usersPage:usersReducer,auth:authReducer,form:formReducer,app:appReducer});// расширение (REDUX_DEVTOOLS_EXTENSION)\nvar composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;// или\n// const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// расширение (REDUX_DEVTOOLS_EXTENSION)\nvar store=createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));// функция создает store\n// let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store;// @ts-ignore\nwindow.store=store;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/Redux-store.ts"],"names":["applyMiddleware","combineReducers","compose","createStore","profilePageReducer","dialogsPageReducer","sidebarReducer","usersReducer","authReducer","thunkMiddleware","reducer","formReducer","appReducer","reducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,OAAQA,eAAR,CAAyBC,eAAzB,CAA0CC,OAA1C,CAAmDC,WAAnD,KAAqE,OAArE,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,aAA5B,CACA,OAAQC,OAAO,GAAIC,CAAAA,WAAnB,KAAqC,YAArC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAEA;AACA,GAAIC,CAAAA,QAAQ,CAAGZ,eAAe,CAAC,CAC3Ba,WAAW,CAAEV,kBADc,CAE3BW,WAAW,CAAEV,kBAFc,CAG3BW,OAAO,CAAEV,cAHkB,CAI3BW,SAAS,CAAEV,YAJgB,CAK3BW,IAAI,CAAEV,WALqB,CAM3BW,IAAI,CAAER,WANqB,CAO3BS,GAAG,CAAER,UAPsB,CAAD,CAA9B,CAgBA;AACA,GAAMS,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+CrB,OAAxE,CACA;AACA;AAEA;AACA,GAAMsB,CAAAA,KAAK,CAAGrB,WAAW,CAACU,QAAD,CAAWQ,gBAAgB,CAACrB,eAAe,CAACS,eAAD,CAAhB,CAA3B,CAAzB,CAIA;AACA;AAKA,cAAee,CAAAA,KAAf,CAEA;AACAF,MAAM,CAACE,KAAP,CAAeA,KAAf","sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n// функция combineReducers склеивает reducer, тоесть создает state\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n// расширение (REDUX_DEVTOOLS_EXTENSION)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// или\r\n// const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// расширение (REDUX_DEVTOOLS_EXTENSION)\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n// функция создает store\r\n// let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AllAppStateType = ReturnType<typeof reducers>\r\nexport type AppStoreType = typeof store\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store"]},"metadata":{},"sourceType":"module"}