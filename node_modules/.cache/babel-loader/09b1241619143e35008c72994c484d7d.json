{"ast":null,"code":"import _objectSpread from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{getAuthUserData}from\"./auth-reducer\";var INITIALIZED_SUCCESS=\"INITIALIZED_SUCCESS\";// обьект initialState задает начальное значение state, если он не придет сразу\nvar initialState={initialized:false};var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case INITIALIZED_SUCCESS:return _objectSpread(_objectSpread({},state),{},{initialized:true});default:return state;}};export var initializedSuccess=function initializedSuccess(){return{type:INITIALIZED_SUCCESS};};export var initializeApp=function initializeApp(){return function(dispatch){var promise=dispatch(getAuthUserData());Promise.all([promise]).then(function(){dispatch(initializedSuccess());});};};export default appReducer;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/app-reducer.ts"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"yJACA,OAAQA,eAAR,KAA8B,gBAA9B,CAIA,GAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAQA;AACA,GAAIC,CAAAA,YAA8B,CAAG,CACjCC,WAAW,CAAE,KADoB,CAArC,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAmE,IAAlEC,CAAAA,KAAkE,2DAA1DH,YAA0D,IAA5CI,CAAAA,MAA4C,2CAClF,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,mBAAL,CACI,sCACOI,KADP,MAEIF,WAAW,CAAE,IAFjB,GAKJ,QACI,MAAOE,CAAAA,KAAP,CARR,CAUH,CAXD,CAiBA,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAA+B,CAACD,IAAI,CAAEN,mBAAP,CAA/B,EAA3B,CAEP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAsE,CACrG,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB,CACAY,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,UAAM,CACZJ,QAAQ,CAACF,kBAAkB,EAAnB,CAAR,CACH,CAHD,EAKH,CAP4B,EAAtB,CAUP,cAAeJ,CAAAA,UAAf","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AllAppStateType} from \"./Redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppActionType = InitializedSuccessType\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\nexport const initializeApp = () => (dispatch: ThunkDispatch<AllAppStateType, unknown, AppActionType>) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}