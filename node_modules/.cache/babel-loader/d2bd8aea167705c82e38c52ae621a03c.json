{"ast":null,"code":"import _regeneratorRuntime from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{authAPI,securityAPI}from\"../API/API\";import{stopSubmit}from\"redux-form\";var SET_USER_DATA=\"samurai_network/auth/SET_USER_DATA\";var GET_CAPTCHA_URL_SUCCESS=\"samurai_network/auth/GET_CAPTCHA_URL_SUCCESS\";// export type InitialStateType = {\n//     data: DataPropsType\n//     resultCode?: number\n//     messages?: Array<string>\n// }\n//\n// обьект initialState задает начальное значение state, если он не придет сразу\nvar initialState={userId:'',email:null,login:null,isAuth:false,captchaUrl:null};var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER_DATA:case GET_CAPTCHA_URL_SUCCESS:return _objectSpread(_objectSpread({},state),action.payload);default:return state;}};export var setAuthUserData=function setAuthUserData(userId,email,login,isAuth){return{type:SET_USER_DATA,payload:{userId:userId,email:email,login:login,isAuth:isAuth}};};export var getCaptchaUrlAC=function getCaptchaUrlAC(captchaUrl){return{type:GET_CAPTCHA_URL_SUCCESS,payload:{captchaUrl:captchaUrl}};};export var getAuthUserData=function getAuthUserData(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,_response$data$data,id,email,_login;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return authAPI.me();case 2:response=_context.sent;if(response.data.resultCode===0){_response$data$data=response.data.data,id=_response$data$data.id,email=_response$data$data.email,_login=_response$data$data.login;dispatch(setAuthUserData(id,email,_login,true));}case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var login=function login(email,password){var rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var captcha=arguments.length>3?arguments[3]:undefined;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return authAPI.login(email,password,rememberMe,captcha);case 2:response=_context2.sent;if(response.data.resultCode===0){dispatch(getAuthUserData());}else{if(response.data.resultCode===10){dispatch(getCaptchaUrl());}message=response.data.messages.length>10?response.data.messages[0]:\"Some error\";dispatch(stopSubmit(\"login\",{_error:message}));}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var logout=function logout(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return authAPI.loginAuth();case 2:response=_context3.sent;if(response.data.resultCode===0){dispatch(setAuthUserData('',null,null,false));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var getCaptchaUrl=function getCaptchaUrl(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var response,captchaUrl;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return securityAPI.security();case 2:response=_context4.sent;captchaUrl=response.data.url;dispatch(getCaptchaUrlAC(captchaUrl));case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export default authReducer;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/auth-reducer.ts"],"names":["authAPI","securityAPI","stopSubmit","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","userId","email","login","isAuth","captchaUrl","authReducer","state","action","type","payload","setAuthUserData","getCaptchaUrlAC","getAuthUserData","dispatch","me","response","data","resultCode","id","password","rememberMe","captcha","getCaptchaUrl","message","messages","length","_error","logout","loginAuth","security","url"],"mappings":"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","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {authAPI, securityAPI} from \"../API/API\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AllAppStateType} from \"./Redux-store\";\r\n\r\nconst SET_USER_DATA = \"samurai_network/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"samurai_network/auth/GET_CAPTCHA_URL_SUCCESS\";\r\ntype ActionType = SetAuthUserDataAction | GetCaptchaUrlACType\r\n\r\nexport type InitialStateType = {\r\n    userId: string\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaUrl?: string | null\r\n}\r\nexport type PostPropsType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    resultCode?: number\r\n    messages?: Array<string>\r\n}\r\n// export type InitialStateType = {\r\n//     data: DataPropsType\r\n//     resultCode?: number\r\n//     messages?: Array<string>\r\n// }\r\n//\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    userId: '',\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type SetAuthUserDataAction = {\r\n    type: typeof SET_USER_DATA\r\n    payload: InitialStateType\r\n}\r\nexport type GetCaptchaUrlACType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: {captchaUrl: string | null}\r\n}\r\n\r\nexport const setAuthUserData = (userId: string, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataAction => ({\r\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth}\r\n} as const);\r\nexport const getCaptchaUrlAC = (captchaUrl: string | null): GetCaptchaUrlACType => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}} as const)\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email: string, password: number, rememberMe: boolean = false, captcha?: string | null) => async (dispatch: ThunkDispatch<AllAppStateType, unknown, SetAuthUserDataAction | FormAction>) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 10 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.loginAuth();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData('', null, null, false));\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch: Dispatch) => {\r\n    let response = await securityAPI.security();\r\n    const captchaUrl = response.data.url\r\n        dispatch(getCaptchaUrlAC(captchaUrl));\r\n\r\n}\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}