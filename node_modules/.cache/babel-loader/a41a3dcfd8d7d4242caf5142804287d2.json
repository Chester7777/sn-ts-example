{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\reactProject\\\\sn-ts-example\\\\src\\\\Components\\\\Login\\\\Login.tsx\";\nimport React from \"react\";\nimport { LoginReduxForm } from \"./LoginForm\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  //isAuth можно и так достать\n  // const isAuth = useSelector<AllAppStateType, boolean>(state => state.auth.isAuth)\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Login/Login.tsx"],"names":["React","LoginReduxForm","connect","login","Redirect","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth","captchaUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAuBC,cAAvB,QAA4C,aAA5C;AACA,SAAQC,OAAR,QAAmC,aAAnC;AAEA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;;AAUA,MAAMC,KAA6D,GAAIC,KAAD,IAAW;AAC7E;AACA;AAEA,QAAMC,QAAQ,GAAIC,QAAD,IAA6B;AAC1CF,IAAAA,KAAK,CAACH,KAAN,CAAYK,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD;AACH,GAFD;;AAGA,MAAIL,KAAK,CAACM,MAAV,EAAkB;AACd,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAdD;;KAAMF,K;;AAeN,MAAMQ,eAAe,GAAIC,KAAD,KAAkD;AACtEF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH,MADmD;AAEtEI,EAAAA,UAAU,EAAEF,KAAK,CAACC,IAAN,CAAWC;AAF+C,CAAlD,CAAxB;;AAIA,eAAed,OAAO,CAACW,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAAkCE,KAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport {LoginFormType, LoginReduxForm} from \"./LoginForm\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: number, rememberMe: boolean) => void\r\n}\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    //isAuth можно и так достать\r\n    // const isAuth = useSelector<AllAppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    const onSubmit = (formData: LoginFormType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: AllAppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}