{"ast":null,"code":"import _toConsumableArray from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var ADD_MESSAGE=\"ADD-MESSAGE\";// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\n// обьект initialState задает начальное значение state, если он не придет сразу\nvar initialState={dialogs:[{id:1,name:\"Dima\"},{id:2,name:\"Jeny\"},{id:3,name:\"Oly\"},{id:4,name:\"Milana\"},{id:5,name:\"Katy\"},{id:6,name:\"Andrey\"}],messages:[{id:1,messages:\"Hi\"},{id:2,messages:\"How is your It-kamasutra?\"},{id:3,messages:\"Yo\"}]};// обьект initialState задает начальное значение state, если он не придет сразу\nvar dialogsPageReducer=function dialogsPageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_MESSAGE:var body=action.newMessageText;return _objectSpread(_objectSpread({},state),{},{messages:[].concat(_toConsumableArray(state.messages),[{id:4,messages:body}])});// case UPDATE_NEW_MESSAGE_TEXT:\n//     return {\n//         ...state,\n//         newMessageText: action.newMessage\n// }\ndefault:return state;}};export var addMessagesActionCreator=function addMessagesActionCreator(newMessageText){return{type:ADD_MESSAGE,newMessageText:newMessageText};};// export const onMessageChangeActionCreator = (newMessage: string) => ({\n//     type: UPDATE_NEW_MESSAGE_TEXT,\n//     newMessage: newMessage\n// } as const)\nexport default dialogsPageReducer;// ReturnType<typeof onMessageChangeActionCreator>","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/dialogsPage-reducer.ts"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","dialogsPageReducer","state","action","type","body","newMessageText","addMessagesActionCreator"],"mappings":"2TAAA,GAAMA,CAAAA,WAAW,CAAG,aAApB,CACA;AAkBA;AACA,GAAIC,CAAAA,YAA6B,CAAG,CAChCC,OAAO,CAAE,CACL,CAACC,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,MAAd,CADK,CAEL,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,MAAd,CAFK,CAGL,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,KAAd,CAHK,CAIL,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,QAAd,CAJK,CAKL,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,MAAd,CALK,CAML,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,QAAd,CANK,CADuB,CAShCC,QAAQ,CAAE,CACN,CAACF,EAAE,CAAE,CAAL,CAAQE,QAAQ,CAAE,IAAlB,CADM,CAEN,CAACF,EAAE,CAAE,CAAL,CAAQE,QAAQ,CAAE,2BAAlB,CAFM,CAGN,CAACF,EAAE,CAAE,CAAL,CAAQE,QAAQ,CAAE,IAAlB,CAHM,CATsB,CAApC,CAgBA;AACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAA6F,IAA5FC,CAAAA,KAA4F,2DAAlEN,YAAkE,IAApDO,CAAAA,MAAoD,2CACpH,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKT,CAAAA,WAAL,CACI,GAAIU,CAAAA,IAAI,CAAGF,MAAM,CAACG,cAAlB,CACA,sCACOJ,KADP,MAEIF,QAAQ,8BAAME,KAAK,CAACF,QAAZ,GAAsB,CAACF,EAAE,CAAE,CAAL,CAAQE,QAAQ,CAAEK,IAAlB,CAAtB,EAFZ,GAIJ;AACA;AACA;AACA;AACA;AACA,QACI,MAAOH,CAAAA,KAAP,CAbR,CAgBH,CAjBD,CAmBA,MAAO,IAAMK,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACD,cAAD,QAA6B,CAACF,IAAI,CAAET,WAAP,CAAoBW,cAAc,CAAdA,cAApB,CAA7B,EAAjC,CACP;AACA;AACA;AACA;AAEA,cAAeL,CAAAA,kBAAf,CAKI","sourcesContent":["const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    // newMessageText: string\r\n}\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Jeny\"},\r\n        {id: 3, name: \"Oly\"},\r\n        {id: 4, name: \"Milana\"},\r\n        {id: 5, name: \"Katy\"},\r\n        {id: 6, name: \"Andrey\"},\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, messages: \"Hi\"},\r\n        {id: 2, messages: \"How is your It-kamasutra?\"},\r\n        {id: 3, messages: \"Yo\"},\r\n    ] as Array<MessagesType>\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst dialogsPageReducer = (state: initialStateType = initialState, action: DialogsPageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, messages: body}]\r\n        }\r\n        // case UPDATE_NEW_MESSAGE_TEXT:\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageText: action.newMessage\r\n        // }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addMessagesActionCreator = (newMessageText: string) => ({type: ADD_MESSAGE, newMessageText} as const)\r\n// export const onMessageChangeActionCreator = (newMessage: string) => ({\r\n//     type: UPDATE_NEW_MESSAGE_TEXT,\r\n//     newMessage: newMessage\r\n// } as const)\r\n\r\nexport default dialogsPageReducer;\r\n\r\ntype DialogsPageActionType =\r\n\r\n    ReturnType<typeof addMessagesActionCreator>\r\n    // ReturnType<typeof onMessageChangeActionCreator>\r\n"]},"metadata":{},"sourceType":"module"}