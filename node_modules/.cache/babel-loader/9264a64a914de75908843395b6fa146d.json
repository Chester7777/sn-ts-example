{"ast":null,"code":"const ADD_MESSAGE = \"ADD-MESSAGE\"; // const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\n\n// обьект initialState задает начальное значение state, если он не придет сразу\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: \"Dima\"\n  }, {\n    id: 2,\n    name: \"Jeny\"\n  }, {\n    id: 3,\n    name: \"Oly\"\n  }, {\n    id: 4,\n    name: \"Milana\"\n  }, {\n    id: 5,\n    name: \"Katy\"\n  }, {\n    id: 6,\n    name: \"Andrey\"\n  }],\n  messages: [{\n    id: 1,\n    messages: \"Hi\"\n  }, {\n    id: 2,\n    messages: \"How is your It-kamasutra?\"\n  }, {\n    id: 3,\n    messages: \"Yo\"\n  }]\n}; // обьект initialState задает начальное значение state, если он не придет сразу\n\nconst dialogsPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let body = action.newMessageText;\n      return { ...state,\n        messages: [...state.messages, {\n          id: 4,\n          messages: body\n        }]\n      };\n    // case UPDATE_NEW_MESSAGE_TEXT:\n    //     return {\n    //         ...state,\n    //         newMessageText: action.newMessage\n    // }\n\n    default:\n      return state;\n  }\n};\n\nexport const addMessagesActionCreator = newMessageText => ({\n  type: ADD_MESSAGE,\n  newMessageText\n}); // export const onMessageChangeActionCreator = (newMessage: string) => ({\n//     type: UPDATE_NEW_MESSAGE_TEXT,\n//     newMessage: newMessage\n// } as const)\n\nexport default dialogsPageReducer; // ReturnType<typeof onMessageChangeActionCreator>","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/dialogsPage-reducer.ts"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","dialogsPageReducer","state","action","type","body","newMessageText","addMessagesActionCreator"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB,C,CACA;;AAkBA;AACA,IAAIC,YAA6B,GAAG;AAChCC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GALK,EAML;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GANK,CADuB;AAShCC,EAAAA,QAAQ,EAAE,CACN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQE,IAAAA,QAAQ,EAAE;AAAlB,GADM,EAEN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQE,IAAAA,QAAQ,EAAE;AAAlB,GAFM,EAGN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQE,IAAAA,QAAQ,EAAE;AAAlB,GAHM;AATsB,CAApC,C,CAgBA;;AACA,MAAMC,kBAAkB,GAAG,CAACC,KAAuB,GAAGN,YAA3B,EAAyCO,MAAzC,KAA6F;AACpH,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAL;AACI,UAAIU,IAAI,GAAGF,MAAM,CAACG,cAAlB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoB;AAACF,UAAAA,EAAE,EAAE,CAAL;AAAQE,UAAAA,QAAQ,EAAEK;AAAlB,SAApB;AAFP,OAAP;AAIJ;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOH,KAAP;AAbR;AAgBH,CAjBD;;AAmBA,OAAO,MAAMK,wBAAwB,GAAID,cAAD,KAA6B;AAACF,EAAAA,IAAI,EAAET,WAAP;AAAoBW,EAAAA;AAApB,CAA7B,CAAjC,C,CACP;AACA;AACA;AACA;;AAEA,eAAeL,kBAAf,C,CAKI","sourcesContent":["const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    // newMessageText: string\r\n}\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Jeny\"},\r\n        {id: 3, name: \"Oly\"},\r\n        {id: 4, name: \"Milana\"},\r\n        {id: 5, name: \"Katy\"},\r\n        {id: 6, name: \"Andrey\"},\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, messages: \"Hi\"},\r\n        {id: 2, messages: \"How is your It-kamasutra?\"},\r\n        {id: 3, messages: \"Yo\"},\r\n    ] as Array<MessagesType>\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst dialogsPageReducer = (state: initialStateType = initialState, action: DialogsPageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, messages: body}]\r\n        }\r\n        // case UPDATE_NEW_MESSAGE_TEXT:\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageText: action.newMessage\r\n        // }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addMessagesActionCreator = (newMessageText: string) => ({type: ADD_MESSAGE, newMessageText} as const)\r\n// export const onMessageChangeActionCreator = (newMessage: string) => ({\r\n//     type: UPDATE_NEW_MESSAGE_TEXT,\r\n//     newMessage: newMessage\r\n// } as const)\r\n\r\nexport default dialogsPageReducer;\r\n\r\ntype DialogsPageActionType =\r\n\r\n    ReturnType<typeof addMessagesActionCreator>\r\n    // ReturnType<typeof onMessageChangeActionCreator>\r\n"]},"metadata":{},"sourceType":"module"}