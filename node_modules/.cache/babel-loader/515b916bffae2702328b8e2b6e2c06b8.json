{"ast":null,"code":"import _classCallCheck from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{connect}from\"react-redux\";import{follow,requestUsersThunkCreator,setCurrentPage,setIsFollowingProgress,unfollow}from\"../../redux/users-reducer\";import React from\"react\";import Users from\"./Users\";import Preloader from\"../Common/Preloader/Preloader\";import{compose}from\"redux\";import{getCurrentPage,getFollowingInProgress,getIsFetching,getPageSize,getPortionSize,getTotalUsersCount,getUsers}from\"../../redux/users-selectors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// export type OnPageChangedType = {\n//     onPageChanged: (pageNumber: number) => void\n// }\nvar UsersContainer=/*#__PURE__*/function(_React$Component){_inherits(UsersContainer,_React$Component);var _super=_createSuper(UsersContainer);function UsersContainer(){var _this;_classCallCheck(this,UsersContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onPageChanged=function(pageNumber){var pageSize=_this.props.pageSize;_this.props.getUsers(pageNumber,pageSize);};return _this;}_createClass(UsersContainer,[{key:\"componentDidMount\",value://подключаем thunkCreator (санки)\nfunction componentDidMount(){var _this$props=this.props,currentPage=_this$props.currentPage,pageSize=_this$props.pageSize;this.props.getUsers(currentPage,pageSize);}// componentDidMount() {\n//     this.props.setIsFetching(true)\n//     usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n//         this.props.setIsFetching(false)\n//         this.props.setUsers(data.items)\n//         this.props.setTotalUsersCount(data.totalCount)\n//     })\n// }\n//подключаем thunkCreator (санки)\n},{key:\"render\",value:// onPageChanged = (pageNumber: number) => {\n//     this.props.setCurrentPage(pageNumber);\n//     this.props.setIsFetching(true)\n//     usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n//         this.props.setIsFetching(false)\n//         this.props.setUsers(data.items)\n//     })\n// }\nfunction render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[this.props.isFetching?/*#__PURE__*/_jsx(Preloader,{}):null,/*#__PURE__*/_jsx(Users,{totalItemsCount:this.props.totalUsersCount,pageSize:this.props.pageSize,currentPage:this.props.currentPage,onPageChanged:this.onPageChanged,users:this.props.users,follow:this.props.follow,unfollow:this.props.unfollow,followingInProgress:this.props.followingInProgress,portionSize:this.props.portionSize// setIsFollowingProgress={this.props.setIsFollowingProgress}\n})]});}}]);return UsersContainer;}(React.Component);//refactoring\n// let mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress\n//     }\n// }\nvar mapStateToProps=function mapStateToProps(state){return{users:getUsers(state),pageSize:getPageSize(state),totalUsersCount:getTotalUsersCount(state),currentPage:getCurrentPage(state),isFetching:getIsFetching(state),followingInProgress:getFollowingInProgress(state),portionSize:getPortionSize(state)};};// let mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n//\n//     return {\n//         follow: (userId: number) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId: number) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (users: Array<UsersType>) => {\n//             dispatch(setUserAC(users))\n//         },\n//         setCurrentPage: (pageNumber: number) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount: number) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         setIsFetching: (isFetching: boolean) => {\n//             dispatch(setIsFetchingAC(isFetching))\n//         }\n//     }\n// }\nexport default compose(connect(mapStateToProps,{follow:follow,unfollow:unfollow,setCurrentPage:setCurrentPage,setIsFollowingProgress:setIsFollowingProgress,getUsers:requestUsersThunkCreator}))(UsersContainer);// let withRedirectComponent = withAuthRedirect(UsersContainer)\n//\n// export default connect(mapStateToProps,\n//     {\n//         follow,\n//         unfollow,\n//         // setUsers,\n//         setCurrentPage,\n//         // setTotalUsersCount,\n//         // setIsFetching,\n//         setIsFollowingProgress,\n//         getUsers: getUsersThunkCreator\n//     })(withRedirectComponent);","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Users/UsersContainer.tsx"],"names":["connect","follow","requestUsersThunkCreator","setCurrentPage","setIsFollowingProgress","unfollow","React","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getPortionSize","getTotalUsersCount","getUsers","UsersContainer","onPageChanged","pageNumber","pageSize","props","currentPage","isFetching","totalUsersCount","users","followingInProgress","portionSize","Component","mapStateToProps","state"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {\r\n    follow,\r\n    requestUsersThunkCreator,\r\n    setCurrentPage,\r\n    setIsFollowingProgress,\r\n    unfollow,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getPortionSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    portionSize: number\r\n\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    // setUsers: (users: Array<UsersType>) => void\r\n    // setTotalUsersCount: (totalCount: number) => void\r\n    // setIsFetching: (isFetching: boolean) => void\r\n\r\n\r\n}\r\nexport type UsersPropsType = MapStateToPropsType & mapDispatchToPropsType;\r\n\r\nexport type GetTasksResponseType = {\r\n    items: Array<UsersType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n// export type OnPageChangedType = {\r\n//     onPageChanged: (pageNumber: number) => void\r\n// }\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    //подключаем thunkCreator (санки)\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.props.setIsFetching(true)\r\n    //     usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n    //         this.props.setIsFetching(false)\r\n    //         this.props.setUsers(data.items)\r\n    //         this.props.setTotalUsersCount(data.totalCount)\r\n    //     })\r\n    // }\r\n\r\n    //подключаем thunkCreator (санки)\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n    // onPageChanged = (pageNumber: number) => {\r\n    //     this.props.setCurrentPage(pageNumber);\r\n    //     this.props.setIsFetching(true)\r\n    //     usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n    //         this.props.setIsFetching(false)\r\n    //         this.props.setUsers(data.items)\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            {/*<Paginator />*/}\r\n            <Users\r\n                totalItemsCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                portionSize={this.props.portionSize}\r\n                // setIsFollowingProgress={this.props.setIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n//refactoring\r\n// let mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\nlet mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPortionSize(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n//\r\n//     return {\r\n//         follow: (userId: number) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId: number) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users: Array<UsersType>) => {\r\n//             dispatch(setUserAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         setIsFetching: (isFetching: boolean) => {\r\n//             dispatch(setIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        setIsFollowingProgress,\r\n        getUsers: requestUsersThunkCreator\r\n    })\r\n)(UsersContainer);\r\n// let withRedirectComponent = withAuthRedirect(UsersContainer)\r\n//\r\n// export default connect(mapStateToProps,\r\n//     {\r\n//         follow,\r\n//         unfollow,\r\n//         // setUsers,\r\n//         setCurrentPage,\r\n//         // setTotalUsersCount,\r\n//         // setIsFetching,\r\n//         setIsFollowingProgress,\r\n//         getUsers: getUsersThunkCreator\r\n//     })(withRedirectComponent);"]},"metadata":{},"sourceType":"module"}