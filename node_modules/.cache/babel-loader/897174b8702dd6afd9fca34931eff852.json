{"ast":null,"code":"import _regeneratorRuntime from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{profileAPI}from\"../API/API\";var ADD_POST=\"ADD-POST\";var DELETE_POST=\"DELETE_POST\";var SET_USER_PROFILE=\"SET_USER_PROFILE\";var SET_STATUS=\"SET_STATUS\";// обьект initialState задает начальное значение state, если он не придет сразу\nvar initialState={posts:[{id:1,message:\"Hey, why nobody love me\",likes:\"15\"},{id:2,message:\"It`s our new program! Hey\",likes:\"20\"}],profile:{},status:\"\"};// обьект initialState задает начальное значение state, если он не придет сразу\nvar profilePageReducer=function profilePageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_POST:var newPost={id:3,message:action.newPostText,likes:\"0\"};return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[newPost])});case DELETE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(p){return p.id!=action.postId;})});case SET_USER_PROFILE:return _objectSpread(_objectSpread({},state),{},{profile:action.profile});case SET_STATUS:return _objectSpread(_objectSpread({},state),{},{status:action.status});default:return state;}};export var addPostsActionCreator=function addPostsActionCreator(newPostText){return{type:ADD_POST,newPostText:newPostText};};export var deletePostsActionCreator=function deletePostsActionCreator(postId){return{type:DELETE_POST,postId:postId};};export var setUserProfile=function setUserProfile(profile){return{type:SET_USER_PROFILE,profile:profile};};export var setStatus=function setStatus(status){return{type:SET_STATUS,status:status};};export var getUserProfile=function getUserProfile(userId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return profileAPI.getProfile(userId);case 2:response=_context.sent;dispatch(setUserProfile(response.data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getStatus=function getStatus(userId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return profileAPI.getStatus(userId);case 2:response=_context2.sent;dispatch(setStatus(response.data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateStatus=function updateStatus(status){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return profileAPI.updateStatus(status);case 2:response=_context3.sent;if(response.data.resultCode===0){dispatch(setStatus(status));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export default profilePageReducer;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/profilePage-reducer.ts"],"names":["profileAPI","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likes","profile","status","profilePageReducer","state","action","type","newPost","newPostText","filter","p","postId","addPostsActionCreator","deletePostsActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../API/API\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likes: string\r\n}\r\ntype ContactsType = {\r\n    facebook: string,\r\n    website: null,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: null,\r\n    github: string,\r\n    mainLink: null\r\n}\r\ntype PhotosType = {\r\n    small: string,\r\n    large: string\r\n}\r\nexport type ProfilePropsType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\nexport type StatusProfileType = {\r\n    resultCode: number,\r\n    message: string,\r\n    data: {\r\n        resultCode: number\r\n        messages: string[],\r\n        data: {}\r\n    }\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hey, why nobody love me\", likes: \"15\"},\r\n        {id: 2, message: \"It`s our new program! Hey\", likes: \"20\"},\r\n    ] as Array<PostsType>,\r\n    profile: {} as ProfilePropsType,\r\n    status: \"\"\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ProfileActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likes: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPostsActionCreator = (newPostText: string) => ({type: ADD_POST, newPostText} as const);\r\nexport const deletePostsActionCreator = (postId: number) => ({type: DELETE_POST, postId} as const);\r\nexport const setUserProfile = (profile: ProfilePropsType) => ({type: SET_USER_PROFILE, profile} as const);\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status} as const);\r\n\r\nexport const getUserProfile = (userId: string) => async (dispatch: Dispatch<ProfileActionType>) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\n\r\ntype ProfileActionType =\r\n    ReturnType<typeof addPostsActionCreator> |\r\n    ReturnType<typeof deletePostsActionCreator> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus>\r\n\r\nexport default profilePageReducer;"]},"metadata":{},"sourceType":"module"}