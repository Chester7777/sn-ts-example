{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\reactProject\\\\sn-ts-example\\\\src\\\\Components\\\\Dialogs\\\\Message\\\\Message.tsx\";\nimport React from \"react\";\nimport s from \"./../Dialog.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = props => {\n  // let messagesElement = React.createRef<HTMLTextAreaElement>();\n  //\n  // let addMessages = () => {\n  //    props.dispatch(addMessagesActionCreator());\n  // }\n  //\n  // let onMessageChange = () => {\n  //     if (messagesElement.current) {\n  //         props.dispatch(onMessageChangeActionCreator(messagesElement.current.value));\n  //     }\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.message,\n      children: props.messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Dialogs/Message/Message.tsx"],"names":["React","s","Message","props","message","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wBAAd;;;AAaA,MAAMC,OAA+B,GAAIC,KAAD,IAAW;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEF,CAAC,CAACG,OAAlB;AAAA,gBAA4BD,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA3BD;;KAAMH,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport s from \"./../Dialog.module.css\";\r\n\r\n\r\ntype MessagesType = {\r\n     id: number\r\n\r\n    messages: string\r\n    // newMessageText: string\r\n}\r\n\r\n\r\n\r\n\r\nconst Message: React.FC<MessagesType> = (props) => {\r\n\r\n    // let messagesElement = React.createRef<HTMLTextAreaElement>();\r\n    //\r\n    // let addMessages = () => {\r\n    //    props.dispatch(addMessagesActionCreator());\r\n    // }\r\n    //\r\n    // let onMessageChange = () => {\r\n    //     if (messagesElement.current) {\r\n    //         props.dispatch(onMessageChangeActionCreator(messagesElement.current.value));\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.messages}</div>\r\n            {/*<div>*/}\r\n            {/*    /!*<div className={s.addText}>*!/*/}\r\n            {/*    /!*    <textarea onChange={onMessageChange} ref={messagesElement} value={props.newMessageText}/>*!/*/}\r\n            {/*    /!*</div>*!/*/}\r\n            {/*    /!*<div className={s.addTextButton}>*!/*/}\r\n            {/*    /!*    <button onClick={addMessages}></button>*!/*/}\r\n            {/*    /!*</div>*!/*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}