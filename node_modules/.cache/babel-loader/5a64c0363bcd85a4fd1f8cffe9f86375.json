{"ast":null,"code":"import _objectSpread from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Profile from\"./Profile\";import{connect}from\"react-redux\";import{getStatus,getUserProfile,updateStatus}from\"../../redux/profilePage-reducer\";import{withRouter}from\"react-router-dom\";import{compose}from\"redux\";import{jsx as _jsx}from\"react/jsx-runtime\";// React.ComponentClass<Pick<PropsType, \"profile\" | \"getUserProfile\">, any> & WithRouterStatics<typeof ProfileContainer>\nvar ProfileContainer=/*#__PURE__*/function(_React$Component){_inherits(ProfileContainer,_React$Component);var _super=_createSuper(ProfileContainer);function ProfileContainer(){_classCallCheck(this,ProfileContainer);return _super.apply(this,arguments);}_createClass(ProfileContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var userId=this.props.match.params.userId;if(!userId){userId=this.props.authorizedUserId;if(!userId){this.props.history.push(\"/login\");}}this.props.getUserProfile(+userId);this.props.getStatus(+userId);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Profile,_objectSpread(_objectSpread({},this.props),{},{profile:this.props.profile,status:this.props.status,updateStatus:this.props.updateStatus}))});}}]);return ProfileContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{profile:state.profilePage.profile,status:state.profilePage.status,authorizedUserId:state.auth.userId,isAuth:state.auth.isAuth};};//обертка compose\nexport default compose(connect(mapStateToProps,{getUserProfile:getUserProfile,getStatus:getStatus,updateStatus:updateStatus}),withRouter// withAuthRedirect\n)(ProfileContainer);//HOC создает контейненрную компаненту вокруг ProfileContainer\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n//передает компаненте данные из URL\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n//передает в компаненту данные из store\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getStatus","getUserProfile","updateStatus","withRouter","compose","ProfileContainer","userId","props","match","params","authorizedUserId","history","push","profile","status","Component","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":"ivBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,SAAR,CAAmBC,cAAnB,CAAqDC,YAArD,KAAwE,iCAAxE,CACA,OAA6BC,UAA7B,KAA8C,kBAA9C,CAEA,OAAQC,OAAR,KAAsB,OAAtB,C,2CAkBA;GAGMC,CAAAA,gB,sSAEF,4BAAoB,CAChB,GAAIC,CAAAA,MAAM,CAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAtC,CAEA,GAAI,CAACA,MAAL,CAAa,CACTA,MAAM,CAAG,KAAKC,KAAL,CAAWG,gBAApB,CACZ,GAAG,CAACJ,MAAJ,CAAY,CACR,KAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACH,CACQ,CACD,KAAKL,KAAL,CAAWN,cAAX,CAA0B,CAACK,MAA3B,EACA,KAAKC,KAAL,CAAWP,SAAX,CAAqB,CAACM,MAAtB,EACH,C,sBAED,iBAAS,CACL,mBACI,kCACI,KAAC,OAAD,gCACQ,KAAKC,KADb,MAEI,OAAO,CAAE,KAAKA,KAAL,CAAWM,OAFxB,CAGI,MAAM,CAAE,KAAKN,KAAL,CAAWO,MAHvB,CAII,YAAY,CAAE,KAAKP,KAAL,CAAWL,YAJ7B,GADJ,EADJ,CASH,C,8BAzB0BL,KAAK,CAACkB,S,EA6BrC,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAgD,CAClEJ,OAAO,CAAEI,KAAK,CAACC,WAAN,CAAkBL,OADuC,CAElEC,MAAM,CAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFwC,CAGlEJ,gBAAgB,CAAEO,KAAK,CAACE,IAAN,CAAWb,MAHqC,CAIlEc,MAAM,CAAEH,KAAK,CAACE,IAAN,CAAWC,MAJ+C,CAAhD,EAAtB,CAOA;AACA,cAAehB,CAAAA,OAAO,CAClBL,OAAO,CAACiB,eAAD,CAAkB,CAACf,cAAc,CAAdA,cAAD,CAAiBD,SAAS,CAATA,SAAjB,CAA4BE,YAAY,CAAZA,YAA5B,CAAlB,CADW,CAElBC,UACA;AAHkB,CAAP,CAIbE,gBAJa,CAAf,CAMA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, ProfilePropsType, updateStatus} from \"../../redux/profilePage-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\"\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStatePropsType = {\r\n    profile: ProfilePropsType\r\n    status: string\r\n    authorizedUserId: string\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & MapStatePropsType & MapDispatchPropsType\r\n\r\n// React.ComponentClass<Pick<PropsType, \"profile\" | \"getUserProfile\">, any> & WithRouterStatics<typeof ProfileContainer>\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId  = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\nif(!userId) {\r\n    this.props.history.push(\"/login\")\r\n}\r\n        }\r\n        this.props.getUserProfile(+userId);\r\n        this.props.getStatus(+userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n//обертка compose\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n//HOC создает контейненрную компаненту вокруг ProfileContainer\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n//передает компаненте данные из URL\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n//передает в компаненту данные из store\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);"]},"metadata":{},"sourceType":"module"}