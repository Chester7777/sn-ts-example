{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\reactProject\\\\sn-ts-example\\\\src\\\\Components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport userPhoto from \"../../../asseds/images/user.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileInfo = props => {\n  _s();\n\n  var _props$profile$photos;\n\n  const [editMode, setEditMode] = useState(false);\n\n  if (!props.profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  const onMainPhotoSelected = e => {\n    var _e$target$files;\n\n    if ((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = formData => {\n    props.saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.image,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn.pixabay.com/photo/2016/10/21/09/29/earth-1757617__480.jpg\",\n        className: s.image_backgraund\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.description,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: s.mainPhoto,\n        src: ((_props$profile$photos = props.profile.photos) === null || _props$profile$photos === void 0 ? void 0 : _props$profile$photos.large) || userPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), props.isOwner && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onMainPhotoSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 35\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(ProfileDataForm, {\n        initialValues: props.profile,\n        profile: props.profile,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(ProfileData, {\n        goToEditMode: () => setEditMode(true),\n        profile: props.profile,\n        isOwner: props.isOwner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ProfileStatus, {\n        status: props.status,\n        updateStatus: props.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileInfo, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n\n_c = ProfileInfo;\n\nconst ProfileData = ({\n  profile\n}, isOwner, goToEditMode) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToEditMode,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Full name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), \" \", profile.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Looking for a job:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \" \", profile.lookingForAJob ? \"yes\" : \"no\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), profile.lookingForAJob && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"My professional skills:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), \" \", profile.lookingForAJobDescription ? \"yes\" : \"no\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"About me:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), \" \", profile.aboutMe]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Contacts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), profile.contacts && Object.keys(profile.contacts).map(key => {\n        return /*#__PURE__*/_jsxDEV(Contact, {\n          contactTitle: key,\n          contactValue: profile.contacts[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ProfileData;\nexport const Contact = ({\n  contactTitle,\n  contactValue\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: [contactTitle, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 39\n    }, this), \" \", contactValue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n};\n_c3 = Contact;\nexport default ProfileInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProfileInfo\");\n$RefreshReg$(_c2, \"ProfileData\");\n$RefreshReg$(_c3, \"Contact\");","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Profile/ProfileInfo/ProfileInfo.tsx"],"names":["React","useState","s","Preloader","ProfileStatus","userPhoto","ProfileDataForm","ProfileInfo","props","editMode","setEditMode","profile","onMainPhotoSelected","e","target","files","length","savePhoto","onSubmit","formData","saveProfile","then","image","image_backgraund","description","mainPhoto","photos","large","isOwner","status","updateStatus","ProfileData","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","Object","keys","map","key","Contact","contactTitle","contactValue","contact"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,0BAAd;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAeA,MAAMC,WAAW,GAAIC,KAAD,IAAiC;AAAA;;AAAA;;AAEjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAU,KAAV,CAAxC;;AAEA,MAAI,CAACO,KAAK,CAACG,OAAX,EAAoB;AAChB,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,QAAMC,mBAAmB,GAAIC,CAAD,IAAsC;AAAA;;AAC9D,2BAAIA,CAAC,CAACC,MAAF,CAASC,KAAb,oDAAI,gBAAgBC,MAApB,EAA4B;AACxBR,MAAAA,KAAK,CAACS,SAAN,CAAgBJ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAhB;AACH;AACJ,GAJD;;AAMA,QAAMG,QAAQ,GAAIC,QAAD,IAAmB;AAChCX,IAAAA,KAAK,CAACY,WAAN,CAAkBD,QAAlB,EAA4BE,IAA5B,CAAiC,MAAM;AACnCX,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAFD;AAGH,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAER,CAAC,CAACoB,KAAlB;AAAA,6BACI;AACI,QAAA,GAAG,EAAC,uEADR;AAEI,QAAA,SAAS,EAAEpB,CAAC,CAACqB;AAFjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAErB,CAAC,CAACsB,WAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEtB,CAAC,CAACuB,SAAlB;AAA6B,QAAA,GAAG,EAAE,0BAAAjB,KAAK,CAACG,OAAN,CAAce,MAAd,gFAAsBC,KAAtB,KAA+BtB;AAAjE;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKG,KAAK,CAACoB,OAAN,iBAAiB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEhB;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFtB,EAGKH,QAAQ,gBACH,QAAC,eAAD;AAAiB,QAAA,aAAa,EAAED,KAAK,CAACG,OAAtC;AAA+C,QAAA,OAAO,EAAEH,KAAK,CAACG,OAA9D;AAAuE,QAAA,QAAQ,EAAEO;AAAjF;AAAA;AAAA;AAAA;AAAA,cADG,gBAEH,QAAC,WAAD;AAAa,QAAA,YAAY,EAAE,MAAMR,WAAW,CAAC,IAAD,CAA5C;AAAoD,QAAA,OAAO,EAAEF,KAAK,CAACG,OAAnE;AACa,QAAA,OAAO,EAAEH,KAAK,CAACoB;AAD5B;AAAA;AAAA;AAAA;AAAA,cALV,eAOI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEpB,KAAK,CAACqB,MAA7B;AAAqC,QAAA,YAAY,EAAErB,KAAK,CAACsB;AAAzD;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAxCD;;GAAMvB,W;;KAAAA,W;;AA0CN,MAAMwB,WAAW,GAAG,CAAC;AAACpB,EAAAA;AAAD,CAAD,EAAiBiB,OAAjB,EAAmCI,YAAnC,KAAgE;AAEhF,sBACI;AAAA,eACKJ,OAAO,iBAAI;AAAA,6BACR;AAAQ,QAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YADhB,eAII;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACuBrB,OAAO,CAACsB,QAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OAC+BtB,OAAO,CAACuB,cAAR,GAAyB,KAAzB,GAAiC,IADhE;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAUKvB,OAAO,CAACuB,cAAR,iBACD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACoCvB,OAAO,CAACwB,yBAAR,GAAoC,KAApC,GAA4C,IADhF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAcI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACsBxB,OAAO,CAACyB,OAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,eAiBI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKzB,OAAO,CAAC0B,QAAR,IACGC,MAAM,CAACC,IAAP,CAAY5B,OAAO,CAAC0B,QAApB,EAA8BG,GAA9B,CAAmCC,GAAD,IAAS;AACvC,4BAAO,QAAC,OAAD;AAAmB,UAAA,YAAY,EAAEA,GAAjC;AAAsC,UAAA,YAAY,EAAE9B,OAAO,CAAC0B,QAAR,CAAiBI,GAAjB;AAApD,WAAcA,GAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAhCD;;MAAMV,W;AAuCN,OAAO,MAAMW,OAAO,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA+C;AAElE,sBAAO;AAAK,IAAA,SAAS,EAAE1C,CAAC,CAAC2C,OAAlB;AAAA,4BAA2B;AAAA,iBAAIF,YAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,OAAmDC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHM;MAAMF,O;AAKb,eAAenC,WAAf","sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport {ProfilePropsType} from \"../../../redux/profilePage-reducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../asseds/images/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfilePropsType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (filePhoto: any) => void\r\n    lookingForAJob: boolean\r\n    saveProfile: (formData: any) => Promise<void>\r\n    // contacts: ContactsType\r\n    // lookingForAJobDescription: string\r\n    // aboutMe: string\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: any) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.image}>\r\n                <img\r\n                    src=\"https://cdn.pixabay.com/photo/2016/10/21/09/29/earth-1757617__480.jpg\"\r\n                    className={s.image_backgraund}/>\r\n            </div>\r\n            <div className={s.description}>\r\n                <img className={s.mainPhoto} src={props.profile.photos?.large || userPhoto}/>\r\n                {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => setEditMode(true)} profile={props.profile}\r\n                                   isOwner={props.isOwner}/>}\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile}: any, isOwner: boolean, goToEditMode: () => void) => {\r\n\r\n    return (\r\n        <div>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription ? \"yes\" : \"no\"}\r\n            </div>}\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b>\r\n\r\n                {profile.contacts &&\r\n                    Object.keys(profile.contacts).map((key) => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string | null\r\n}\r\nexport const Contact = ({contactTitle, contactValue}: ContactType) => {\r\n\r\n    return <div className={s.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}