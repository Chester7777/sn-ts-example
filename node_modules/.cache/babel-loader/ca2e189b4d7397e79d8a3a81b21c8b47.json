{"ast":null,"code":"import React from\"react\";import{LoginReduxForm}from\"./LoginForm\";import{connect}from\"react-redux\";import{login}from\"../../redux/auth-reducer\";import{Redirect}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(props){//isAuth можно и так достать\n// const isAuth = useSelector<AllAppStateType, boolean>(state => state.auth.isAuth)\nvar onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe,formData.captchaUrl);};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:\"/profile\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginReduxForm,{onSubmit:onSubmit,captchaUrl:props.captchaUrl})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth,captchaUrl:state.auth.captchaUrl};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Login/Login.tsx"],"names":["React","LoginReduxForm","connect","login","Redirect","Login","props","onSubmit","formData","email","password","rememberMe","captchaUrl","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAuBC,cAAvB,KAA4C,aAA5C,CACA,OAAQC,OAAR,KAAmC,aAAnC,CAEA,OAAQC,KAAR,KAAoB,0BAApB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,C,wFAWA,GAAMC,CAAAA,KAA6D,CAAG,QAAhEA,CAAAA,KAAgE,CAACC,KAAD,CAAW,CAC7E;AACA;AAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAA6B,CAC1CF,KAAK,CAACH,KAAN,CAAYK,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,CAAoEH,QAAQ,CAACI,UAA7E,EACH,CAFD,CAGA,GAAIN,KAAK,CAACO,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CACD,mBAAO,oCACH,6BADG,cAEH,KAAC,cAAD,EAAgB,QAAQ,CAAEN,QAA1B,CAAoC,UAAU,CAAED,KAAK,CAACM,UAAtD,EAFG,GAAP,CAIH,CAdD,CAeA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAkD,CACtEF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADmD,CAEtED,UAAU,CAAEG,KAAK,CAACC,IAAN,CAAWJ,UAF+C,CAAlD,EAAxB,CAIA,cAAeV,CAAAA,OAAO,CAACY,eAAD,CAAkB,CAACX,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAkCE,KAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport {LoginFormType, LoginReduxForm} from \"./LoginForm\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    captchaUrl?: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: number, rememberMe?: boolean, captchaUrl?: string | null) => Promise<void>\r\n}\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    //isAuth можно и так достать\r\n    // const isAuth = useSelector<AllAppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    const onSubmit = (formData: LoginFormType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captchaUrl)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: AllAppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}