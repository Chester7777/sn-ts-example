{"ast":null,"code":"import _objectSpread from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import s from\"./FormControls.module.css\";import{Field}from\"redux-form\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var FormControl=function FormControl(_ref){var input=_ref.input,meta=_ref.meta,children=_ref.children,props=_objectWithoutProperties(_ref,[\"input\",\"meta\",\"children\"]);var hasError=meta.touched&&meta.error;return/*#__PURE__*/_jsxs(\"div\",{className:s.formControl+\" \"+(hasError?s.error:\"\"),children:[/*#__PURE__*/_jsx(\"div\",{children:children}),hasError&&/*#__PURE__*/_jsx(\"span\",{children:meta.error})]});};export var Textarea=function Textarea(props){var input=props.input,meta=props.meta,children=props.children,restProps=_objectWithoutProperties(props,[\"input\",\"meta\",\"children\"]);return/*#__PURE__*/_jsx(FormControl,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},input),restProps))}));};export var Input=function Input(props){var input=props.input,meta=props.meta,children=props.children,restProps=_objectWithoutProperties(props,[\"input\",\"meta\",\"children\"]);return/*#__PURE__*/_jsx(FormControl,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},input),restProps))}));};export var createField=function createField(placeholder,name,validators,component){var props=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var text=arguments.length>5&&arguments[5]!==undefined?arguments[5]:\"\";return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,_objectSpread({placeholder:placeholder,name:name,validate:validators,component:component},props)),\" \",text]});};","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Common/FormsControls/FormsControls.tsx"],"names":["React","s","Field","FormControl","input","meta","children","props","hasError","touched","error","formControl","Textarea","restProps","Input","createField","placeholder","name","validators","component","text"],"mappings":"uUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,2BAAd,CACA,OAAQC,KAAR,KAA8D,YAA9D,C,wFAOA,MAAO,IAAMC,CAAAA,WAA2C,CAAG,QAA9CA,CAAAA,WAA8C,MAAuC,IAArCC,CAAAA,KAAqC,MAArCA,KAAqC,CAA9BC,IAA8B,MAA9BA,IAA8B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAXC,KAAW,4DAC9F,GAAMC,CAAAA,QAAQ,CAAGH,IAAI,CAACI,OAAL,EAAgBJ,IAAI,CAACK,KAAtC,CAEA,mBAAO,aAAK,SAAS,CAAET,CAAC,CAACU,WAAF,CAAgB,GAAhB,EAAuBH,QAAQ,CAAGP,CAAC,CAACS,KAAL,CAAa,EAA5C,CAAhB,wBACH,qBACKJ,QADL,EADG,CAIFE,QAAQ,eAAI,sBAAOH,IAAI,CAACK,KAAZ,EAJV,GAAP,CAMH,CATM,CAUP,MAAO,IAAME,CAAAA,QAAqC,CAAG,QAAxCA,CAAAA,QAAwC,CAACL,KAAD,CAAW,CAC5D,GAAOH,CAAAA,KAAP,CAA8CG,KAA9C,CAAOH,KAAP,CAAcC,IAAd,CAA8CE,KAA9C,CAAcF,IAAd,CAAoBC,QAApB,CAA8CC,KAA9C,CAAoBD,QAApB,CAAiCO,SAAjC,0BAA8CN,KAA9C,8BACA,mBAAO,KAAC,WAAD,gCAAiBA,KAAjB,4BAAyB,+CAAcH,KAAd,EAAyBS,SAAzB,EAAzB,GAAP,CACH,CAHM,CAIP,MAAO,IAAMC,CAAAA,KAAkC,CAAG,QAArCA,CAAAA,KAAqC,CAACP,KAAD,CAAW,CACzD,GAAOH,CAAAA,KAAP,CAA8CG,KAA9C,CAAOH,KAAP,CAAcC,IAAd,CAA8CE,KAA9C,CAAcF,IAAd,CAAoBC,QAApB,CAA8CC,KAA9C,CAAoBD,QAApB,CAAiCO,SAAjC,0BAA8CN,KAA9C,8BACA,mBAAO,KAAC,WAAD,gCAAiBA,KAAjB,4BAAyB,4CAAWH,KAAX,EAAsBS,SAAtB,EAAzB,GAAP,CAEH,CAJM,CAMP,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,WAAD,CACCC,IADD,CAECC,UAFD,CAGCC,SAHD,CAKe,IADdZ,CAAAA,KACc,2DADN,EACM,IAAda,CAAAA,IAAc,2DAAP,EAAO,CACtC,mBAAO,oCACH,KAAC,KAAD,gBACI,WAAW,CAAEJ,WADjB,CAEI,IAAI,CAAEC,IAFV,CAGI,QAAQ,CAAEC,UAHd,CAII,SAAS,CAAEC,SAJf,EAKQZ,KALR,EADG,KAOCa,IAPD,GAAP,CASH,CAfM","sourcesContent":["import React from \"react\";\r\nimport s from \"./FormControls.module.css\"\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n    input: any\r\n}\r\n\r\nexport const FormControl: React.FC<FormControlPropsType> = ({input, meta, children, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props;\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props;\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n\r\n}\r\n\r\nexport const createField = (placeholder: string,\r\n                            name: string,\r\n                            validators: any,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {},\r\n                            text = \"\") => {\r\n    return <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}