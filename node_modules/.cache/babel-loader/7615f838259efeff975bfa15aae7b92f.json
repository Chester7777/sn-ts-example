{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\reactProject\\\\sn-ts-example\\\\src\\\\Components\\\\Common\\\\Paginator\\\\Paginator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Paginator = props => {\n  _s();\n\n  const portionSize = useSelector(state => state.usersPage.portionSize);\n  let pagesCount = Math.ceil(props.totalItemsCount / props.portionSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / props.pageSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\n  let rightPortionPageNumber = portionNumber * props.portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.paginator,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn({\n          [styles.selectedPage]: props.currentPage === p\n        }, styles.pageNumber),\n        onClick: e => {\n          props.onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginator, \"5erMxwlSOrYq6oIJdZ28UHzJ+PU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Common/Paginator/Paginator.tsx"],"names":["React","useState","styles","cn","useSelector","Paginator","props","portionSize","state","usersPage","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","pageSize","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","currentPage","pageNumber","e","onPageChanged"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,SAAQC,WAAR,QAA0B,aAA1B;;AAaA,OAAO,IAAIC,SAAS,GAAIC,KAAD,IAA0B;AAAA;;AAE7C,QAAMC,WAAW,GAAGH,WAAW,CAA0BI,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,WAAnD,CAA/B;AAGA,MAAIG,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,CAACO,eAAN,GAAwBP,KAAK,CAACC,WAAxC,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,UAArB,EAAiCK,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGN,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGJ,KAAK,CAACY,QAA7B,CAAnB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAS,CAAT,CAAhD;AACA,MAAIoB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBb,KAAK,CAACC,WAA5B,GAA0C,CAAtE;AACA,MAAIe,sBAAsB,GAAGH,aAAa,GAAGb,KAAK,CAACC,WAAnD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACqB,SAAvB;AAAA,eACKJ,aAAa,GAAG,CAAhB,iBACD;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOQL,KAAK,CACAU,MADL,CACYC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAIH,sBADpD,EAEKI,GAFL,CAEUD,CAAD,IAAO;AACR,0BAAO;AAAM,QAAA,SAAS,EAAEtB,EAAE,CAAC;AAAC,WAACD,MAAM,CAACyB,YAAR,GAAuBrB,KAAK,CAACsB,WAAN,KAAsBH;AAA9C,SAAD,EAAmDvB,MAAM,CAAC2B,UAA1D,CAAnB;AAEM,QAAA,OAAO,EAAGC,CAAD,IAAO;AACZxB,UAAAA,KAAK,CAACyB,aAAN,CAAoBN,CAApB;AACH,SAJP;AAAA,kBAIUA;AAJV,SACWA,CADX;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KARL,CAPR,EAkBQR,YAAY,GAAGE,aAAf,iBACA;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5CM;;GAAId,S;UAEaD,W;;;KAFbC,S","sourcesContent":["import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport {RootStateType} from \"../../../redux/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../../redux/Redux-store\";\r\n\r\ntype PaginatorType = {\r\n    totalItemsCount: number\r\n    pageSize: 10\r\n    portionSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\n\r\n\r\nexport let Paginator = (props: PaginatorType) => {\r\n\r\n    const portionSize = useSelector<AllAppStateType, number>(state => state.usersPage.portionSize);\r\n\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.portionSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.pageSize);\r\n    let [portionNumber, setPortionNumber] = useState<number>(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p) => {\r\n                        return <span className={cn({[styles.selectedPage]: props.currentPage === p}, styles.pageNumber)}\r\n                                     key={p}\r\n                                     onClick={(e) => {\r\n                                         props.onPageChanged(p)\r\n                                     }}>{p}</span>\r\n                    })\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>PREV</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}