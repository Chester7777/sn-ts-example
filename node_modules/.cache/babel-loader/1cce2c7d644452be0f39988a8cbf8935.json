{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\n// обьект initialState задает начальное значение state, если он не придет сразу\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/app-reducer.ts"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AACA,SAAQA,eAAR,QAA8B,gBAA9B;AAIA,MAAMC,mBAAmB,GAAG,qBAA5B;AAQA;AACA,IAAIC,YAA8B,GAAG;AACjCC,EAAAA,WAAW,EAAE;AADoB,CAArC;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAmE;AAClF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAiBA,OAAO,MAAMG,kBAAkB,GAAG,OAA+B;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAA/B,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAsE;AACrG,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACZJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHD;AAKH,CAPM;AAUP,eAAeJ,UAAf","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AllAppStateType} from \"./Redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppActionType = InitializedSuccessType\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\nexport const initializeApp = () => (dispatch: ThunkDispatch<AllAppStateType, unknown, AppActionType>) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}