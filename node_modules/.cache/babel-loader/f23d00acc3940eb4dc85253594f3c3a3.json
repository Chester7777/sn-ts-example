{"ast":null,"code":"import _slicedToArray from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProfileStatus=function ProfileStatus(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _useState3=useState(props.status),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];useEffect(function(){if(status!==props.status){setStatus(props.status);}},[props.status]);var activateEditMode=function activateEditMode(){setEditMode(true);};var deActivateEditMode=function deActivateEditMode(){setEditMode(false);props.updateStatus(status);};var changeStatus=function changeStatus(e){setStatus(e.currentTarget.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[!editMode&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Status: \"}),\" \",/*#__PURE__*/_jsx(\"span\",{onDoubleClick:activateEditMode,children:props.status||\"--------\"})]}),editMode&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{onChange:changeStatus,autoFocus:true,onBlur:deActivateEditMode,type:\"text\",value:status})})]});};export default ProfileStatus;//таже компонента, но классовая\n// class ProfileStatus extends React.Component<ProfileStatusPropsType> {\n//     state = {\n//         aditMode: false,\n//         status: this.props.status\n//     }\n//     activateEditMode = () => {\n//         this.setState({\n//             aditMode: true\n//         })\n//     }\n//     deActivateEditMode = () => {\n//         this.setState({\n//             aditMode: false\n//         })\n//         this.props.updateStatus(this.state.status)\n//     }\n//     changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         this.setState({\n//             status: e.currentTarget.value\n//         })\n//     }\n//\n//     componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\n//         if (prevProps.status !== this.props.status) {\n//             this.setState({\n//                 status: this.props.status\n//             })\n//         }\n//     }\n//\n//     render() {\n//         return (\n//             <div>\n//                 {!this.state.aditMode &&\n//                 <div>\n//                     <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\n//                 </div>}\n//                 {this.state.aditMode &&\n//                 <div>\n//                     <input\n//                         onChange={this.changeStatus}\n//                         autoFocus={true}\n//                         onBlur={this.deActivateEditMode}\n//                         type=\"text\"\n//                         value={this.props.status || \"--------\"}/>\n//                 </div>}\n//             </div>\n//         )\n//     }\n//\n// }\n// export default ProfileStatus;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Profile/ProfileInfo/ProfileStatus.tsx"],"names":["React","useEffect","useState","ProfileStatus","props","editMode","setEditMode","status","setStatus","activateEditMode","deActivateEditMode","updateStatus","changeStatus","e","currentTarget","value"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,C,wFAOA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAmC,CAErD,cAAgCF,QAAQ,CAAU,KAAV,CAAxC,wCAAOG,QAAP,eAAiBC,WAAjB,eACA,eAA4BJ,QAAQ,CAACE,KAAK,CAACG,MAAP,CAApC,yCAAOA,MAAP,eAAeC,SAAf,eAEAP,SAAS,CAAC,UAAM,CACZ,GAAIM,MAAM,GAAKH,KAAK,CAACG,MAArB,CAA6B,CACzBC,SAAS,CAACJ,KAAK,CAACG,MAAP,CAAT,CACH,CACJ,CAJQ,CAIN,CAACH,KAAK,CAACG,MAAP,CAJM,CAAT,CAMA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BH,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAGA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BJ,WAAW,CAAC,KAAD,CAAX,CACAF,KAAK,CAACO,YAAN,CAAmBJ,MAAnB,EACH,CAHD,CAIA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAA4C,CAC7DL,SAAS,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT,CACH,CAFD,CAIA,mBACI,uBACK,CAACV,QAAD,eACD,oCACI,+BADJ,kBACoB,aAAM,aAAa,CAAEI,gBAArB,UAAwCL,KAAK,CAACG,MAAN,EAAgB,UAAxD,EADpB,GAFJ,CAKKF,QAAQ,eACT,kCACI,cACI,QAAQ,CAAEO,YADd,CAEI,SAAS,CAAE,IAFf,CAGI,MAAM,CAAEF,kBAHZ,CAII,IAAI,CAAC,MAJT,CAKI,KAAK,CAAEH,MALX,EADJ,EANJ,GADJ,CAiBH,CAvCD,CAyCA,cAAeJ,CAAAA,aAAf,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nexport type ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus = (props: ProfileStatusPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n    const changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={changeStatus}\r\n                    autoFocus={true}\r\n                    onBlur={deActivateEditMode}\r\n                    type=\"text\"\r\n                    value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n//таже компонента, но классовая\r\n// class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n//     state = {\r\n//         aditMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: true\r\n//         })\r\n//     }\r\n//     deActivateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: false\r\n//         })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//     changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         })\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.aditMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n//                 </div>}\r\n//                 {this.state.aditMode &&\r\n//                 <div>\r\n//                     <input\r\n//                         onChange={this.changeStatus}\r\n//                         autoFocus={true}\r\n//                         onBlur={this.deActivateEditMode}\r\n//                         type=\"text\"\r\n//                         value={this.props.status || \"--------\"}/>\r\n//                 </div>}\r\n//             </div>\r\n//         )\r\n//     }\r\n//\r\n// }\r\n// export default ProfileStatus;"]},"metadata":{},"sourceType":"module"}