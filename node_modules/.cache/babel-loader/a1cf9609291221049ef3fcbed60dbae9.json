{"ast":null,"code":"import _objectSpread from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/React/reactProject/sn-ts-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Profile from\"./Profile\";import{connect}from\"react-redux\";import{getStatus,getUserProfile,savePhoto,saveProfile,updateStatus}from\"../../redux/profilePage-reducer\";import{withRouter}from\"react-router-dom\";import{compose}from\"redux\";import Preloader from\"../Common/Preloader/Preloader\";import{jsx as _jsx}from\"react/jsx-runtime\";// React.ComponentClass<Pick<PropsType, \"profile\" | \"getUserProfile\">, any> & WithRouterStatics<typeof ProfileContainer>\nvar ProfileContainer=/*#__PURE__*/function(_React$Component){_inherits(ProfileContainer,_React$Component);var _super=_createSuper(ProfileContainer);function ProfileContainer(){_classCallCheck(this,ProfileContainer);return _super.apply(this,arguments);}_createClass(ProfileContainer,[{key:\"refreshProfile\",value:function refreshProfile(){var userId=this.props.match.params.userId;if(!userId){userId=this.props.authorizedUserId;if(!userId){this.props.history.push(\"/login\");}}this.props.getUserProfile(+userId);this.props.getStatus(+userId);}},{key:\"componentDidMount\",value:function componentDidMount(){this.refreshProfile();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){if(this.props.match.params.userId!=prevProps.match.params.userId){this.refreshProfile();}}},{key:\"render\",value:function render(){if(!this.props.profile){return/*#__PURE__*/_jsx(Preloader,{});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Profile,_objectSpread(_objectSpread({},this.props),{},{isOwner:!this.props.match.params.userId,profile:this.props.profile,status:this.props.status,updateStatus:this.props.updateStatus,savePhoto:this.props.savePhoto,lookingForAJob:this.props.profile.lookingForAJob,saveProfile:this.props.saveProfile,goToEditMode:this.props.goToEditMode}))});}}]);return ProfileContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{profile:state.profilePage.profile,status:state.profilePage.status,authorizedUserId:state.auth.userId,isAuth:state.auth.isAuth};};//обертка compose\nexport default compose(connect(mapStateToProps,{getUserProfile:getUserProfile,getStatus:getStatus,updateStatus:updateStatus,savePhoto:savePhoto,saveProfile:saveProfile}),withRouter// withAuthRedirect\n)(ProfileContainer);//HOC создает контейненрную компаненту вокруг ProfileContainer\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n//передает компаненте данные из URL\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n//передает в компаненту данные из store\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/Components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getStatus","getUserProfile","savePhoto","saveProfile","updateStatus","withRouter","compose","Preloader","ProfileContainer","userId","props","match","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","snapshot","profile","status","lookingForAJob","goToEditMode","Component","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":"ivBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OACIC,SADJ,CAEIC,cAFJ,CAIIC,SAJJ,CAKIC,WALJ,CAMIC,YANJ,KAOO,iCAPP,CAQA,OAA6BC,UAA7B,KAA8C,kBAA9C,CAEA,OAAQC,OAAR,KAAsB,OAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,C,2CAsBA;GAGMC,CAAAA,gB,mSAEF,yBAAiB,CACb,GAAIC,CAAAA,MAAM,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC,CAEA,GAAI,CAACA,MAAL,CAAa,CACTA,MAAM,CAAG,KAAKC,KAAL,CAAWG,gBAApB,CACA,GAAI,CAACJ,MAAL,CAAa,CACT,KAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACH,CACJ,CACD,KAAKL,KAAL,CAAWT,cAAX,CAA0B,CAACQ,MAA3B,EACA,KAAKC,KAAL,CAAWV,SAAX,CAAqB,CAACS,MAAtB,EACH,C,iCAED,4BAAoB,CAChB,KAAKO,cAAL,GACH,C,kCAED,4BAAmBC,SAAnB,CAAmDC,SAAnD,CAA4EC,QAA5E,CAA4F,CACxF,GAAI,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,EAAkCQ,SAAS,CAACN,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,CAAqE,CACjE,KAAKO,cAAL,GACH,CACJ,C,sBAED,iBAAS,CACL,GAAI,CAAC,KAAKN,KAAL,CAAWU,OAAhB,CAAyB,CACrB,mBAAO,KAAC,SAAD,IAAP,CACH,CAED,mBACI,kCACI,KAAC,OAAD,gCACQ,KAAKV,KADb,MAEI,OAAO,CAAE,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAFtC,CAGI,OAAO,CAAE,KAAKC,KAAL,CAAWU,OAHxB,CAII,MAAM,CAAE,KAAKV,KAAL,CAAWW,MAJvB,CAKI,YAAY,CAAE,KAAKX,KAAL,CAAWN,YAL7B,CAMI,SAAS,CAAE,KAAKM,KAAL,CAAWR,SAN1B,CAOI,cAAc,CAAE,KAAKQ,KAAL,CAAWU,OAAX,CAAmBE,cAPvC,CAQI,WAAW,CAAE,KAAKZ,KAAL,CAAWP,WAR5B,CASI,YAAY,CAAE,KAAKO,KAAL,CAAWa,YAT7B,GADJ,EADJ,CAgBH,C,8BA9C0B1B,KAAK,CAAC2B,S,EAkDrC,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAgD,CAC9DN,OAAO,CAAEM,KAAK,CAACC,WAAN,CAAkBP,OADmC,CAE9DC,MAAM,CAAEK,KAAK,CAACC,WAAN,CAAkBN,MAFoC,CAG9DR,gBAAgB,CAAEa,KAAK,CAACE,IAAN,CAAWnB,MAHiC,CAI9DoB,MAAM,CAAEH,KAAK,CAACE,IAAN,CAAWC,MAJ2C,CAAhD,EAAtB,CAUA;AACA,cAAevB,CAAAA,OAAO,CAElBP,OAAO,CAAC0B,eAAD,CAAkB,CAACxB,cAAc,CAAdA,cAAD,CAAiBD,SAAS,CAATA,SAAjB,CAA4BI,YAAY,CAAZA,YAA5B,CAA0CF,SAAS,CAATA,SAA1C,CAAqDC,WAAW,CAAXA,WAArD,CAAlB,CAFW,CAGdE,UACJ;AAJkB,CAAP,CAKbG,gBALa,CAAf,CAOA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getUserProfile,\r\n    ProfilePropsType,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatus\r\n} from \"../../redux/profilePage-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\"\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStatePropsType = {\r\n    profile: ProfilePropsType | null\r\n    status: string\r\n    authorizedUserId: string\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (filePhoto: string) => void\r\n    saveProfile: (profile: ProfilePropsType) => Promise<void>\r\n    goToEditMode: () => void\r\n\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & MapStatePropsType & MapDispatchPropsType\r\n\r\n// React.ComponentClass<Pick<PropsType, \"profile\" | \"getUserProfile\">, any> & WithRouterStatics<typeof ProfileContainer>\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(+userId);\r\n        this.props.getStatus(+userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    lookingForAJob={this.props.profile.lookingForAJob}\r\n                    saveProfile={this.props.saveProfile}\r\n                    goToEditMode={this.props.goToEditMode}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n\r\n    }\r\n\r\n)\r\n\r\n//обертка compose\r\nexport default compose\r\n< React.ComponentType > (\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n        withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n//HOC создает контейненрную компаненту вокруг ProfileContainer\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n//передает компаненте данные из URL\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n//передает в компаненту данные из store\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);"]},"metadata":{},"sourceType":"module"}