{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport profilePageReducer from \"./profilePage-reducer\";\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from \"redux-form\";\nimport appReducer from \"./app-reducer\";\n// функция combineReducers склеивает reducer, тоесть создает state\nlet reducers = combineReducers({\n  profilePage: profilePageReducer,\n  dialogsPage: dialogsPageReducer,\n  sidebar: sidebarReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer\n}); // const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const composeEnhancers =\n//     typeof window === 'object' &&\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n//         window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n//             // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n//         }) : compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware))); // функция создает store\n// let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store; // @ts-ignore\n\nwindow.store = store;","map":{"version":3,"sources":["C:/React/reactProject/sn-ts-example/src/redux/Redux-store.ts"],"names":["applyMiddleware","combineReducers","createStore","profilePageReducer","dialogsPageReducer","sidebarReducer","usersReducer","authReducer","thunkMiddleware","reducer","formReducer","appReducer","reducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","app","store","composeEnhancers","window"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAAmDC,WAAnD,QAA4E,OAA5E;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAGA;AACA,IAAIC,QAAQ,GAAGX,eAAe,CAAC;AAC3BY,EAAAA,WAAW,EAAEV,kBADc;AAE3BW,EAAAA,WAAW,EAAEV,kBAFc;AAG3BW,EAAAA,OAAO,EAAEV,cAHkB;AAI3BW,EAAAA,SAAS,EAAEV,YAJgB;AAK3BW,EAAAA,IAAI,EAAEV,WALqB;AAM3BW,EAAAA,IAAI,EAAER,WANqB;AAO3BS,EAAAA,GAAG,EAAER;AAPsB,CAAD,CAA9B,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMS,KAAK,GAAGlB,WAAW,CAACU,QAAD,EAAWS,gBAAgB,CAACrB,eAAe,CAACQ,eAAD,CAAhB,CAA3B,CAAzB,C,CAEA;AACA;;AAIA,eAAeY,KAAf,C,CAEA;;AACAE,MAAM,CAACF,KAAP,GAAeA,KAAf","sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore, Store} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\nimport {exists} from \"fs\";\r\n\r\n// функция combineReducers склеивает reducer, тоесть создает state\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n// const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// const composeEnhancers =\r\n//     typeof window === 'object' &&\r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n//         window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n//             // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n//         }) : compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n// функция создает store\r\n// let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport type AllAppStateType = ReturnType<typeof reducers>\r\nexport type AppStoreType = typeof store\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store"]},"metadata":{},"sourceType":"module"}