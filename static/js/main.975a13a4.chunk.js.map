{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Header/Header.module.css","Components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.ts","redux/state.ts","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Header/Header.tsx","Components/Music/Music.tsx","Components/Sidebar/friend.tsx","Components/Navbar/Navbar.tsx","Components/News/news.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/Setting/Setting.tsx","App.tsx","index.tsx","Components/Dialogs/Dialog.module.css","Components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","state","console","log","dialogsPage","dialogs","id","name","messages","newMessageText","profilePage","posts","message","likes","newPostText","sidebar","friends","age","addPost","newPost","push","addMessage","newMessage","updateNewPostText","newText","updateNewMessageText","DialogItem","props","path","className","s","dialogsItems","active","to","Message","messagesElement","React","createRef","addText","onChange","current","value","ref","addTextButton","onClick","Dialogs","dialogsElements","map","d","m","src","alt","Header","header","Music","Friend","Navbar","nav","item","activeClassName","News","Post","MyPosts","postsElement","p","newPostElement","post","myPosts","button","ProfileInfo","image","description","Profile","Setting","App","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.975a13a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__1Cwvm\",\"myPosts\":\"MyPosts_myPosts__zav6r\",\"button\":\"MyPosts_button__LQs7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1XGa7\",\"image\":\"ProfileInfo_image__3508U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2LuNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2-0hR\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let rerenderEntireTree = (state: RootStateType) => {\r\n    console.log(\"State changed\")\r\n}\r\nexport type FriendsType = {\r\n    name: string\r\n    age: number\r\n    id: number\r\n}\r\nexport type PostsType = {\r\n    message: string\r\n    likes: string\r\n    id: number\r\n}\r\nexport type MessagesType = {\r\n    messages: string\r\n    id: number\r\n}\r\nexport type DialogsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport type SidebarType = {\r\n    friends: Array<FriendsType>\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    newMessageText: string\r\n}\r\nexport type RootStateType = {\r\n    sidebar: SidebarType\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\n\r\nlet state: RootStateType = {\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: \"Dima\"},\r\n            {id: 2, name: \"Jeny\"},\r\n            {id: 3, name: \"Oly\"},\r\n            {id: 4, name: \"Milana\"},\r\n            {id: 5, name: \"Katy\"},\r\n            {id: 6, name: \"Andrey\"},\r\n        ],\r\n        messages: [\r\n            {id: 1, messages: \"Hi\"},\r\n            {id: 2, messages: \"How is your It-kamasutra?\"},\r\n            {id: 3, messages: \"Yo\"},\r\n        ],\r\n        newMessageText: \"new Text\",\r\n    },\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: \"Hey, why nobody love me\", likes: \"15\"},\r\n            {id: 2, message: \"It`s our new program! Hey\", likes: \"20\"},\r\n        ],\r\n        newPostText: \"It-kamasutra\"\r\n    },\r\n    sidebar: {\r\n        friends: [\r\n            {name: \"Andrew\", age: 32, id: 1},\r\n            {name: \"Sasha\", age: 33, id: 2},\r\n            {name: \"Sveta\", age: 29, id: 3},\r\n        ]\r\n    }\r\n}\r\n\r\nexport let addPost = () => {\r\n    const newPost: PostsType = {\r\n        id: 3,\r\n        message: state.profilePage.newPostText,\r\n        likes: \"0\"\r\n    };\r\n    state.profilePage.posts.push(newPost);\r\n    state.profilePage.newPostText = \"\";\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport let addMessage = () => {\r\n    const newMessage = {\r\n        id: 4,\r\n        messages: state.dialogsPage.newMessageText,\r\n    }\r\n    state.dialogsPage.messages.push(newMessage);\r\n    state.dialogsPage.newMessageText = \"\";\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport let updateNewPostText = (newText: string) => {\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport let updateNewMessageText = (newMessage: string) => {\r\n    state.dialogsPage.newMessageText = newMessage;\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport const subscribe = (observer: (state:RootStateType ) => void) => {\r\n    rerenderEntireTree = observer;\r\n}\r\n\r\nexport default state;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./../Dialog.module.css\";\r\nimport {DialogsType} from \"../../../redux/state\";\r\n\r\nconst DialogItem: React.FC<DialogsType> = (props) => {\r\n    let path = \"/dialogs/1\" + props.id;\r\n    return (\r\n\r\n        <div className={s.dialogsItems + \" \" + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./../Dialog.module.css\";\r\n\r\n\r\ntype MessagesType = {\r\n    messages: string\r\n    id: number\r\n    addMessage: () => void\r\n    newMessageText: string\r\n    updateNewMessageText: (newMessage: string) => void\r\n}\r\n\r\nconst Message: React.FC<MessagesType> = (props) => {\r\n\r\n    let messagesElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addMessages = () => {\r\n       props.addMessage();\r\n    }\r\n\r\n    let onMessageChange = () => {\r\n        if (messagesElement.current) {\r\n            props.updateNewMessageText(messagesElement.current.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.message}>{props.messages}</div>\r\n            <div>\r\n                <div className={s.addText}>\r\n                    <textarea onChange={onMessageChange} ref={messagesElement} value={props.newMessageText}/>\r\n                </div>\r\n                <div className={s.addTextButton}>\r\n                    <button onClick={addMessages}></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {addMessage, DialogsPageType, MessagesType} from \"../../redux/state\";\r\nimport s from \"./Dialog.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogsPage: DialogsPageType\r\n    addMessage: () => void\r\n    updateNewMessageText: (newMessage: string) => void\r\n    newMessageText: string\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    const dialogsElements = props.dialogsPage.dialogs.map((d) => <DialogItem id={d.id} name={d.name}/>)\r\n    const messagesElement = props.dialogsPage.messages.map((m) => <Message id={m.id} messages={m.messages}\r\n                                                                           addMessage={props.addMessage} updateNewMessageText={props.updateNewMessageText} newMessageText={props.newMessageText}/>)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems + \" \" + s.active}>\r\n                <img src=\"https://i.pinimg.com/originals/9a/da/3b/9ada3bc305a1f45eab527f60da172d53.png\" alt=\"\"/>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRm4B-uFtqzkLT-t0vUQtY3tZmoPuPASXzjDw&usqp=CAU\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"https://socialniesety.ru/files/images/components/articles_journal/originals/instagram/422/kak_sdelat_artavatarku_v_instagram_18.jpg\"\r\n                    alt=\"\"/>\r\n                <img src=\"https://linedot.ru/wp-content/uploads/2019/10/avatarki-dlya-steam_11.jpg\" alt=\"\"/>\r\n                <img\r\n                    src=\"https://avatars.mds.yandex.net/get-zen_doc/235144/pub_5d92e1109c944600ae6bfc5d_5d92e1c7aad43600adecf124/scale_1200\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQb_O0f0c1A4kOSifv2lykdbjhhXF5r6N-9kw&usqp=CAU\"\r\n                    alt=\"\"/>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src=\"https://placeitmarketing.s3.amazonaws.com/public/custompages/logo-maker/Esports-Logo-Maker.png\"\r\n            alt=\"\"/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\nconst  Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport {FriendsType, RootStateType} from \"../../redux/state\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: Array<FriendsType>\r\n}\r\n\r\n\r\nconst Friend: React.FC<PropsType> = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            {props.friends[0].name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\nimport Friend from \"../Sidebar/friend\";\r\nimport {SidebarType} from \"../../redux/state\";\r\n\r\n\r\n\r\nconst Navbar = (props: SidebarType) => {\r\n\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/dialogs\">Massages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <Friend friends={props.friends}/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\n\r\n\r\n\r\nfunction News () {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {PostsType} from \"../../../../redux/state\";\r\n\r\n\r\nconst Post: React.FC<PostsType> = (props) => {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img src=\"https://i.ytimg.com/vi/Y5GLCBjHR8U/maxresdefault.jpg\" alt=\"\"/>\r\n            {props.message}\r\n\r\n            <div>\r\n                    <span>\r\n                        likes\r\n                    </span>\r\n                {props.likes}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {PostsType, updateNewPostText} from \"../../../redux/state\";\r\n\r\ntype MyPostsType = {\r\n    posts: Array<PostsType>\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n    newPostText: string\r\n\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsType> = (props) => {\r\n\r\n    const postsElement = props.posts.map((p: any) => <Post id={p.id} message={p.message} likes={p.likes}/>)\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPosts = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            props.updateNewPostText(newPostElement.current.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.myPosts}>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n                </div>\r\n                <div className={s.button}>\r\n                    <button onClick={addPosts}>Add post</button>\r\n                </div>\r\n            </div>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.image}>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQzr0R9ziCVWDGq7tD8jO-FhKrY_KxfqpxW1g&usqp=CAU\"\r\n                    alt=\"content\"/>\r\n            </div>\r\n            <div className={s.description}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport MyPosts from \"./MyPosts/MyPosts\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {addPost, ProfilePageType} from \"../../redux/state\";\r\n\r\ntype PropsType = {\r\n    profilePage: ProfilePageType\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts\r\n                posts={props.profilePage.posts}\r\n                newPostText={props.profilePage.newPostText}\r\n                addPost={props.addPost}\r\n                updateNewPostText={props.updateNewPostText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\n\r\n\r\nconst Setting = () => {\r\n    return(\r\n        <div>\r\n            Setting\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React from \"react\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport \"./App.css\";\nimport Dialogs from \"./Components/Dialogs/Dialogs\";\nimport Header from \"./Components/Header/Header\";\nimport Music from \"./Components/Music/Music\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport News from \"./Components/News/news\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Setting from \"./Components/Setting/Setting\";\nimport DialogItem from \"./Components/Dialogs/DialogItem/DialogItem\";\nimport Message from \"./Components/Dialogs/Message/Message\";\nimport {addMessage, DialogsPageType, ProfilePageType, RootStateType} from \"./redux/state\";\n\ntype AppType = {\n    state: RootStateType\n    addPost: () => void\n    addMessage: () => void\n    updateNewPostText: (newText: string) => void\n    updateNewMessageText: (newMessage: string) => void\n    newMessageText: string\n}\n\n\nconst App: React.FC<AppType> = (props) => {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar friends={props.state.sidebar.friends}/>\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/dialogs\"\n                           render={() => <Dialogs\n                               dialogsPage={props.state.dialogsPage}\n                               addMessage={props.addMessage}\n                               newMessageText={props.newMessageText}\n                               updateNewMessageText={props.updateNewMessageText}\n                           />}\n\n                    />\n                    <Route path=\"/profile\"\n                           render={() => <Profile\n                               profilePage={props.state.profilePage}\n                               addPost={props.addPost}\n                               updateNewPostText={props.updateNewPostText}\n                           />}/>\n                    <Route path=\"/news\" render={() => <News/>}/>\n                    <Route path=\"/music\" render={() => <Music/>}/>\n                    <Route path=\"/settings\" render={() => <Setting/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n}\n\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport state, {subscribe} from \"./redux/state\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {addMessage, addPost, RootStateType, updateNewMessageText, updateNewPostText} from \"./redux/state\";\n\ntype addPostType = {\n    addPost: () => void\n    addMessage: () => void\n    updateNewPostText: (newText: string) => void\n    updateNewMessageText: (newMessage: string) => void\n    newMessageText: string\n}\nexport let rerenderEntireTree = (state: RootStateType) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                state={state}\n                addPost={addPost}\n                addMessage={addMessage}\n                updateNewPostText={updateNewPostText}\n                updateNewMessageText={updateNewMessageText}\n                newMessageText={state.dialogsPage.newMessageText}\n            />\n        </React.StrictMode>,\n        document.getElementById(\"root\")\n    );\n}\n\nrerenderEntireTree(state);\nsubscribe(rerenderEntireTree);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2evgY\",\"dialogsItems\":\"Dialog_dialogsItems__d3IVJ\",\"active\":\"Dialog_active__3lWGQ\",\"messages\":\"Dialog_messages__24ZvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3uRQR\",\"item\":\"Navbar_item__3yGGV\",\"active\":\"Navbar_active__2yhpY\"};"],"sourceRoot":""}