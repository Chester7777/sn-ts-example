[{"C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx":"1","C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts":"2","C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx":"3","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts":"4","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts":"5","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx":"6","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx":"7","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx":"8","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx":"9","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx":"10","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx":"11","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithSuspense.tsx":"12","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx":"13","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx":"14","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx":"15","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx":"16","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts":"17","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts":"18","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts":"19","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts":"20","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts":"21","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts":"22","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx":"23","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx":"24","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx":"25","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx":"26","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx":"27","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx":"28","C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts":"29","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx":"30","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx":"31","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"32","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx":"33","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"34","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Paginator\\Paginator.tsx":"35","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"36","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"37","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"38","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"39","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"40","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx":"41","C:\\React\\reactProject\\sn-ts-example\\src\\API\\ProfileAPI.ts":"42","C:\\React\\reactProject\\sn-ts-example\\src\\API\\UsersAPI.ts":"43","C:\\React\\reactProject\\sn-ts-example\\src\\API\\SecurityAPI.ts":"44","C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts":"45","C:\\React\\reactProject\\sn-ts-example\\src\\API\\AuthAPI.ts":"46","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersSearchForm.tsx":"47"},{"size":467,"mtime":1621288505326,"results":"48","hashOfConfig":"49"},{"size":425,"mtime":1608994354631,"results":"50","hashOfConfig":"49"},{"size":9731,"mtime":1624390923985,"results":"51","hashOfConfig":"49"},{"size":1739,"mtime":1623539854764,"results":"52","hashOfConfig":"49"},{"size":1306,"mtime":1623089820788,"results":"53","hashOfConfig":"49"},{"size":1319,"mtime":1623000205589,"results":"54","hashOfConfig":"49"},{"size":152,"mtime":1611702357978,"results":"55","hashOfConfig":"49"},{"size":159,"mtime":1611702357840,"results":"56","hashOfConfig":"49"},{"size":5015,"mtime":1624200867963,"results":"57","hashOfConfig":"49"},{"size":151,"mtime":1611702357671,"results":"58","hashOfConfig":"49"},{"size":1312,"mtime":1623538546616,"results":"59","hashOfConfig":"49"},{"size":401,"mtime":1623486899170,"results":"60","hashOfConfig":"49"},{"size":2616,"mtime":1618232962753,"results":"61","hashOfConfig":"49"},{"size":3600,"mtime":1623536569942,"results":"62","hashOfConfig":"49"},{"size":1322,"mtime":1623537924222,"results":"63","hashOfConfig":"49"},{"size":218,"mtime":1623539034278,"results":"64","hashOfConfig":"49"},{"size":752,"mtime":1616763753558,"results":"65","hashOfConfig":"49"},{"size":4949,"mtime":1623095565108,"results":"66","hashOfConfig":"49"},{"size":2148,"mtime":1623094539486,"results":"67","hashOfConfig":"49"},{"size":7324,"mtime":1624200867982,"results":"68","hashOfConfig":"49"},{"size":3398,"mtime":1623094064019,"results":"69","hashOfConfig":"49"},{"size":887,"mtime":1623960298548,"results":"70","hashOfConfig":"49"},{"size":1608,"mtime":1621180801958,"results":"71","hashOfConfig":"49"},{"size":675,"mtime":1623538080637,"results":"72","hashOfConfig":"49"},{"size":2694,"mtime":1618232962785,"results":"73","hashOfConfig":"49"},{"size":958,"mtime":1618257746522,"results":"74","hashOfConfig":"49"},{"size":5752,"mtime":1624390470594,"results":"75","hashOfConfig":"49"},{"size":1107,"mtime":1623537272480,"results":"76","hashOfConfig":"49"},{"size":395,"mtime":1618425356087,"results":"77","hashOfConfig":"49"},{"size":1537,"mtime":1621122894822,"results":"78","hashOfConfig":"49"},{"size":1095,"mtime":1623538937965,"results":"79","hashOfConfig":"49"},{"size":458,"mtime":1623538975118,"results":"80","hashOfConfig":"49"},{"size":1253,"mtime":1623538937950,"results":"81","hashOfConfig":"49"},{"size":3431,"mtime":1623490422710,"results":"82","hashOfConfig":"49"},{"size":2021,"mtime":1624208908711,"results":"83","hashOfConfig":"49"},{"size":2086,"mtime":1623537132582,"results":"84","hashOfConfig":"49"},{"size":3122,"mtime":1623537586114,"results":"85","hashOfConfig":"49"},{"size":1187,"mtime":1621127567875,"results":"86","hashOfConfig":"49"},{"size":1724,"mtime":1623536211933,"results":"87","hashOfConfig":"49"},{"size":538,"mtime":1623537132601,"results":"88","hashOfConfig":"49"},{"size":1026,"mtime":1618242976735,"results":"89","hashOfConfig":"49"},{"size":1250,"mtime":1623095216599,"results":"90","hashOfConfig":"49"},{"size":992,"mtime":1624054852035,"results":"91","hashOfConfig":"49"},{"size":165,"mtime":1623077496212,"results":"92","hashOfConfig":"49"},{"size":1420,"mtime":1623089234145,"results":"93","hashOfConfig":"49"},{"size":495,"mtime":1623077596561,"results":"94","hashOfConfig":"49"},{"size":2015,"mtime":1624303471674,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"11wfxvs",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx",[],["205","206"],"C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx",["207","208","209","210","211"],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithSuspense.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx",["212"],"import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getUserProfile,\r\n    ProfilePropsType,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatus\r\n} from \"../../redux/profilePage-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\"\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStatePropsType = {\r\n    profile: ProfilePropsType | null\r\n    status: string\r\n    authorizedUserId: string\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (filePhoto: string) => void\r\n    saveProfile: (profile: ProfilePropsType) => Promise<void>\r\n    goToEditMode: () => void\r\n\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & MapStatePropsType & MapDispatchPropsType\r\n\r\n// React.ComponentClass<Pick<PropsType, \"profile\" | \"getUserProfile\">, any> & WithRouterStatics<typeof ProfileContainer>\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(+userId);\r\n        this.props.getStatus(+userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    lookingForAJob={this.props.profile.lookingForAJob}\r\n                    saveProfile={this.props.saveProfile}\r\n                    goToEditMode={this.props.goToEditMode}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n\r\n    }\r\n\r\n)\r\n\r\n//обертка compose\r\nexport default compose\r\n< React.ComponentType > (\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n        withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n//HOC создает контейненрную компаненту вокруг ProfileContainer\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n//передает компаненте данные из URL\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n//передает в компаненту данные из store\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx",["213"],"import React from \"react\";\r\nimport preloader from \"../../../asseds/images/Pinwheel.gif\";\r\n\r\n\r\nlet Preloader: React.FC = () => {\r\n\r\n    return <>\r\n         <img src={preloader}/>\r\n    </>\r\n}\r\n\r\nexport default Preloader;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts",["214"],"import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {BaseThunkType} from \"./Redux-store\";\r\nimport {profileAPI} from \"../API/ProfileAPI\";\r\n\r\n\r\nconst ADD_POST = \"sn/PROFILE/ADD-POST\";\r\nconst DELETE_POST = \"sn/PROFILE/DELETE_POST\";\r\nconst SET_USER_PROFILE = \"sn/PROFILE/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"sn/PROFILE/SET_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"sn/PROFILE/SAVE_PHOTO_SUCCESS\";\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likes: string\r\n};\r\nexport type ContactsType = {\r\n    facebook: string,\r\n    website: null,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: null,\r\n    github: string,\r\n    mainLink: null\r\n};\r\nexport type PhotosType = {\r\n    small: string,\r\n    large: string\r\n};\r\nexport type ProfilePropsType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n};\r\n\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hey, why nobody love me\", likes: \"15\"},\r\n        {id: 2, message: \"It`s our new program! Hey\", likes: \"20\"},\r\n    ] as Array<PostsType>,\r\n    profile: null as ProfilePropsType | null,\r\n    status: \"\"\r\n};\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst profilePageReducer = (state = initialState, action: ProfileActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likes: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: state.profile && {...state.profile, photos: action.photos}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPostsActionCreator = (newPostText: string) => ({type: ADD_POST, newPostText} as const);\r\nexport const deletePostsActionCreator = (postId: number) => ({type: DELETE_POST, postId} as const);\r\nexport const setUserProfile = (profile: ProfilePropsType) => ({type: SET_USER_PROFILE, profile} as const);\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status} as const);\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: SAVE_PHOTO_SUCCESS, photos} as const);\r\n\r\ntype ThunkType = BaseThunkType<ProfileActionType | FormAction>;\r\n\r\nexport const getUserProfile = (userId: string): ThunkType =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\nexport const getStatus = (userId: string): ThunkType =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data))\r\n    }\r\nexport const updateStatus = (status: string): ThunkType =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\nexport const savePhoto = (file: string): ThunkType =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos))\r\n        }\r\n    }\r\n\r\nexport const saveProfile = (profile: ProfilePropsType): ThunkType =>\r\n    async (dispatch, getState) => {\r\n        const userId = getState().auth.userId\r\n        let response = await profileAPI.saveProfile(profile);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\r\n            return Promise.reject(response.data.messages[0])\r\n        }\r\n    }\r\n\r\n\r\nexport type ProfileActionType =\r\n    ReturnType<typeof addPostsActionCreator> |\r\n    ReturnType<typeof deletePostsActionCreator> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus> |\r\n    ReturnType<typeof savePhotoSuccess>\r\n\r\nexport default profilePageReducer;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts",["215","216","217"],"import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../API/UsersAPI\";\r\nimport {BaseThunkType} from \"./Redux-store\";\r\n\r\n\r\nconst FOLLOW = \"SN/USERS/FOLLOW\";\r\nconst UNFOLLOW = \"SN/USERS/UNFOLLOW\";\r\nconst SET_USER = \"SN/USERS/SET_USER\";\r\nconst SET_CURRENT_PAGE = \"SN/USERS/SET_CURRENT_PAGE\";\r\nconst SET_FILTER = \"SN/USERS/SET_FILTER\";\r\nconst SET_TOTAL_COUNT = \"SN/USERS/SET_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SN/USERS/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    portionSize: number\r\n    filter: {\r\n        term: string\r\n        friend: null | boolean\r\n    }\r\n}\r\n\r\nexport type UsersType = {\r\n    \"name\": string\r\n    \"id\": number\r\n    \"uniqueUrlName\": string | null\r\n    \"photos\": {\r\n        \"small\": string | null\r\n        \"large\": string | null\r\n    },\r\n    \"status\": string | null\r\n    \"followed\": boolean\r\n}\r\n\r\n\r\ntype CountryType = {\r\n    country: string\r\n    citi: string\r\n}\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nexport let initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    portionSize: 10,\r\n    filter: {\r\n        term: \"\",\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                //users: [...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users]\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USER: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_FILTER:\r\n            return {\r\n                ...state,\r\n                filter: action.payload\r\n            }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsers = (users: Array<UsersType>) => ({type: SET_USER, users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const setFilter = (filter: FilterType) => ({type: SET_FILTER, payload: filter} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    count: totalUsersCount\r\n} as const)\r\nexport const setIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const setIsFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching, userId\r\n} as const)\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setFilter> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setIsFetching> |\r\n    ReturnType<typeof setIsFollowingProgress>\r\n\r\nexport type FilterType = typeof initialState.filter;\r\n\r\n\r\nexport type GetUsersThunkCreatorType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    totalCount: number\r\n}\r\n\r\n// type ThunkType = ThunkAction<void, AllAppStateType, unknown, ActionType>\r\nexport const requestUsersThunkCreator = (page: number, pageSize: number, filter: FilterType) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(setFilter(filter));\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend);\r\n        dispatch(setIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\ntype ThunkType = BaseThunkType<UsersActionType>;\r\n\r\nlet followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: (userId: number) => Promise<any>, actionCreator: (userId: number) => UsersActionType) => {\r\n    dispatch(setIsFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n        } catch (reject) {\r\n            return reject.data.data.error\r\n        }\r\n    }\r\n}\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\n//refactoring дублирование кода\r\n// export const follow = (userId: number) => {\r\n//     return async (dispatch: Dispatch) => {\r\n//         dispatch(setIsFollowingProgress(true, userId));\r\n//         let data = await usersAPI.follow(userId);\r\n//         if (data.data.resultCode == 0) {\r\n//             dispatch(followSuccess(userId))\r\n//         }\r\n//         dispatch(setIsFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n// export const unfollow = (userId: number) => {\r\n//     return async (dispatch: Dispatch) => {\r\n//         dispatch(setIsFollowingProgress(true, userId));\r\n//         let data = await usersAPI.unfollow(userId);\r\n//         if (data.data.resultCode == 0) {\r\n//             dispatch(unfollowSuccess(userId))\r\n//         }\r\n//         dispatch(setIsFollowingProgress(false, userId));\r\n//     }\r\n// }","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx",["218"],"import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/Validators/validators\";\r\nimport s from \"./../Common/FormsControls/FormControls.module.css\"\r\n\r\nexport type LoginFormType = {\r\n    email: string\r\n    password: number\r\n    rememberMe?: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\nexport type PropsType = {\r\n    captchaUrl?: string | null\r\n}\r\nexport const LoginForm = (props: InjectedFormProps<LoginFormType, PropsType> & PropsType) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Input} validate={[required]} name={\"email\"} placeholder={\"Email\"}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} validate={[required]} name={\"password\"} type={\"password\"}\r\n                       placeholder={\"Password\"}/>\r\n\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl} />}\r\n            {props.captchaUrl && createField(\"Symbol from image\", \"captcha\", [required], Input, {})}\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const LoginReduxForm = reduxForm<LoginFormType, PropsType>({form: \"login\"})(LoginForm)\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx",["219"],"import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n\r\n    return <header className={s.header}>\r\n        <img\r\n            src=\"https://placeitmarketing.s3.amazonaws.com/public/custompages/logo-maker/Esports-Logo-Maker.png\"/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx",["220"],"import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMassageFormType, AddMessageFormRedux} from \"./Message/AddMassageForm\";\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    let messagesElement = React.createRef<HTMLTextAreaElement>();\r\n    // let newMessageBody = state.newMessageText\r\n\r\n    const dialogsElements = props.dialogsPage.dialogs.map((d) => <DialogItem id={d.id} name={d.name}/>)\r\n    const messagesElements = props.dialogsPage.messages.map((m) => <Message id={m.id} messages={m.messages}/>)\r\n\r\n    // let addMessages = () => {\r\n    //     props.addMessages()\r\n    // }\r\n    let addNewMessage = (values: AddMassageFormType) => {\r\n       props.addMessages(values.newMessageText);\r\n    }\r\n\r\n    // let onMessageChange = () => {\r\n    //     if (messagesElement.current) {\r\n    //         let body = messagesElement.current.value\r\n    //         props.onMessageChange(body)\r\n    //     }\r\n    // }\r\n    // if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n    return (\r\n        <div>\r\n            <h3>Massages</h3>\r\n\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems + \" \" + s.active}>\r\n                    <img src=\"https://i.pinimg.com/originals/9a/da/3b/9ada3bc305a1f45eab527f60da172d53.png\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRm4B-uFtqzkLT-t0vUQtY3tZmoPuPASXzjDw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://socialniesety.ru/files/images/components/articles_journal/originals/instagram/422/kak_sdelat_artavatarku_v_instagram_18.jpg\"\r\n                        alt=\"\"/>\r\n                    <img src=\"https://linedot.ru/wp-content/uploads/2019/10/avatarki-dlya-steam_11.jpg\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://avatars.mds.yandex.net/get-zen_doc/235144/pub_5d92e1109c944600ae6bfc5d_5d92e1c7aad43600adecf124/scale_1200\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQb_O0f0c1A4kOSifv2lykdbjhhXF5r6N-9kw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx",["221","222","223","224"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["225","226"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {ProfilePropsType} from \"../../../redux/profilePage-reducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../asseds/images/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfilePropsType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (filePhoto: any) => void\r\n    lookingForAJob: boolean\r\n    saveProfile: (formData: any) => Promise<void>\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileDataType) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.image}>\r\n                <img\r\n                    src=\"https://cdn.pixabay.com/photo/2016/10/21/09/29/earth-1757617__480.jpg\"\r\n                    className={s.image_backgraund}/>\r\n            </div>\r\n            <div className={s.description}>\r\n                <img className={s.mainPhoto} src={props.profile.photos?.large || userPhoto}/>\r\n                {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => setEditMode(true)} profile={props.profile}\r\n                                   isOwner={props.isOwner}/>}\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ProfileDataType = {\r\n    profile: any, isOwner: boolean, goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData = ({profile, goToEditMode, isOwner}: ProfileDataType) => {\r\n\r\n    return (\r\n        <div>\r\n            {isOwner &&\r\n            <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription ? \"yes\" : \"no\"}\r\n            </div>}\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {profile.contacts &&\r\n            Object.keys(profile.contacts).map((key) => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string | null\r\n}\r\nexport const Contact: React.ComponentType<ContactType> = ({contactTitle, contactValue}) => {\r\n\r\n    return <div className={s.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Paginator\\Paginator.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["227"],"import React from \"react\";\r\nimport {addPostsActionCreator} from \"../../../redux/profilePage-reducer\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {connect} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../../redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType} from \"../../../redux/store\";\r\n\r\n//самодельный контейнер\r\n// type MyPostsType = {\r\n//     store: StoreType\r\n// }\r\n// const MyPostsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState()\r\n//                 let addPosts = () => {\r\n//                     store.dispatch(addPostsActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text: string) => {\r\n//                     let action = onPostChangeActionCreator(text)\r\n//                     store.dispatch(action)\r\n//                 }\r\n//                 return (\r\n//                     <MyPosts\r\n//                         onPostChangeActionCreator={onPostChange}\r\n//                         addPosts={addPosts}\r\n//                         posts={state.profilePage.posts}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                     />\r\n//                 )\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPosts: (newPostText: string) => void\r\n\r\n}\r\nexport type MyPostsPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\n// подключили react-redux\r\nlet mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n    return {\r\n        // newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPosts: (newPostText: string) => dispatch(addPostsActionCreator(newPostText))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["228"],"import React, {useEffect, useState} from \"react\";\r\n\r\nexport type ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus: React.ComponentType<ProfileStatusPropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [status, setStatus] = useState<string>(props.status);\r\n\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n    const changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={changeStatus}\r\n                    autoFocus={true}\r\n                    onBlur={deActivateEditMode}\r\n                    type=\"text\"\r\n                    value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n//таже компонента, но классовая\r\n// class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n//     state = {\r\n//         aditMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: true\r\n//         })\r\n//     }\r\n//     deActivateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: false\r\n//         })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//     changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         })\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.aditMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n//                 </div>}\r\n//                 {this.state.aditMode &&\r\n//                 <div>\r\n//                     <input\r\n//                         onChange={this.changeStatus}\r\n//                         autoFocus={true}\r\n//                         onBlur={this.deActivateEditMode}\r\n//                         type=\"text\"\r\n//                         value={this.props.status || \"--------\"}/>\r\n//                 </div>}\r\n//             </div>\r\n//         )\r\n//     }\r\n//\r\n// }\r\n// export default ProfileStatus;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",["229"],"import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {AddMyPostFormRedux, MyPostsType} from \"./Post/AddMyPostForm\";\r\n\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    const postsElement = props.posts.map((p) => <Post key={p.id} id={p.id} message={p.message}\r\n                                                      likes={p.likes}/>)\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let onAddPost = (values: MyPostsType) => {\r\n        props.addPosts(values.newPostText)\r\n    }\r\n    //до подключения Form\r\n    // let onPostChange = () => {\r\n    //     if (newPostElement.current) {\r\n    //         let text = newPostElement.current.value;\r\n    //         props.onPostChangeActionCreator(text)\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className={s.post}>\r\n            <h3>My posts</h3>\r\n            {/*<input type=\"text\"/>*/}\r\n            <AddMyPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.myPosts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",["230"],"import React, {FormEventHandler} from \"react\";\r\nimport {createField, Input} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"../../Common/FormsControls/FormControls.module.css\";\r\nimport {ProfilePropsType} from \"../../../redux/profilePage-reducer\";\r\n\r\n\r\ntype ProfileDataFormType = {\r\n    profile: ProfilePropsType\r\n    error: string\r\n    handleSubmit: any\r\n}\r\n// type ProfileTypeKeys = GetStringKeys<PropsType>\r\n\r\nconst ProfileDataForm = (props: ProfileDataFormType) => {\r\n\r\n    return (\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <button>save</button>\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n\r\n            <div>\r\n                <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills:</b> {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>About me:</b> {createField(\"About me\", \"aboutMe\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(props.profile.contacts).map((key) => {\r\n                return <div key={key}><b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b> </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<any,any>({form: \"edit-profile\"})(ProfileDataForm);\r\n export default ProfileDataFormReduxForm;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\ProfileAPI.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\UsersAPI.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\SecurityAPI.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts",["231"],"import axios from \"axios\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"0b171657-160a-4f70-93fb-80213f27dfbf\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\nexport type LoginAuthResponseType = {\r\n    data: {}\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\nexport type MeResponseType = {\r\n    data: {\r\n        id: string\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\nexport type LoginResponseType = {\r\n    data: {\r\n        userId: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\nexport type GetProfileResponseType = {\r\n    userId: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\n\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\API\\AuthAPI.ts",["232"],"import {instance, LoginAuthResponseType, LoginResponseType, MeResponseType} from \"./API\";\r\n\r\nexport const AuthAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`);\r\n    },\r\n    login(email: string, password: number, rememberMe: boolean, captcha?: string | null) {\r\n        return instance.post<LoginResponseType>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    loginAuth() {\r\n        return instance.delete<LoginAuthResponseType>(`auth/login`)\r\n    }\r\n}","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersSearchForm.tsx",[],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":3,"column":30,"nodeType":"239","messageId":"240","endLine":3,"endColumn":37},{"ruleId":"237","severity":1,"message":"241","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"237","severity":1,"message":"242","line":9,"column":8,"nodeType":"239","messageId":"240","endLine":9,"endColumn":23},{"ruleId":"237","severity":1,"message":"243","line":18,"column":17,"nodeType":"239","messageId":"240","endLine":18,"endColumn":23},{"ruleId":"237","severity":1,"message":"244","line":21,"column":8,"nodeType":"239","messageId":"240","endLine":21,"endColumn":9},{"ruleId":"245","severity":1,"message":"246","line":60,"column":44,"nodeType":"247","messageId":"248","endLine":60,"endColumn":46},{"ruleId":"249","severity":1,"message":"250","line":8,"column":10,"nodeType":"251","endLine":8,"endColumn":32},{"ruleId":"245","severity":1,"message":"246","line":70,"column":53,"nodeType":"247","messageId":"248","endLine":70,"endColumn":55},{"ruleId":"237","severity":1,"message":"252","line":42,"column":6,"nodeType":"239","messageId":"240","endLine":42,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":108,"column":65,"nodeType":"247","messageId":"248","endLine":108,"endColumn":67},{"ruleId":"245","severity":1,"message":"253","line":170,"column":34,"nodeType":"247","messageId":"248","endLine":170,"endColumn":36},{"ruleId":"249","severity":1,"message":"250","line":32,"column":34,"nodeType":"251","endLine":32,"endColumn":64},{"ruleId":"249","severity":1,"message":"250","line":10,"column":9,"nodeType":"251","endLine":11,"endColumn":115},{"ruleId":"237","severity":1,"message":"254","line":10,"column":9,"nodeType":"239","messageId":"240","endLine":10,"endColumn":24},{"ruleId":"237","severity":1,"message":"255","line":21,"column":6,"nodeType":"239","messageId":"240","endLine":21,"endColumn":19},{"ruleId":"256","severity":1,"message":"257","line":64,"column":8,"nodeType":"258","endLine":64,"endColumn":10,"suggestions":"259"},{"ruleId":"256","severity":1,"message":"260","line":72,"column":8,"nodeType":"258","endLine":72,"endColumn":29,"suggestions":"261"},{"ruleId":"249","severity":1,"message":"250","line":122,"column":29,"nodeType":"251","endLine":122,"endColumn":117},{"ruleId":"249","severity":1,"message":"250","line":38,"column":17,"nodeType":"251","endLine":40,"endColumn":53},{"ruleId":"249","severity":1,"message":"250","line":43,"column":17,"nodeType":"251","endLine":43,"endColumn":94},{"ruleId":"237","severity":1,"message":"262","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"256","severity":1,"message":"263","line":17,"column":8,"nodeType":"258","endLine":17,"endColumn":22,"suggestions":"264"},{"ruleId":"237","severity":1,"message":"265","line":12,"column":9,"nodeType":"239","messageId":"240","endLine":12,"endColumn":23},{"ruleId":"237","severity":1,"message":"266","line":1,"column":16,"nodeType":"239","messageId":"240","endLine":1,"endColumn":32},{"ruleId":"237","severity":1,"message":"267","line":2,"column":9,"nodeType":"239","messageId":"240","endLine":2,"endColumn":18},{"ruleId":"237","severity":1,"message":"268","line":50,"column":6,"nodeType":"239","messageId":"240","endLine":50,"endColumn":28},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"@typescript-eslint/no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'HeaderContainer' is defined but never used.","'Button' is defined but never used.","'s' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CountryType' is defined but never used.","Expected '===' and instead saw '=='.","'messagesElement' is assigned a value but never used.","'PostPropsType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["271"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["272"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["273"],"'newPostElement' is assigned a value but never used.","'FormEventHandler' is defined but never used.","'UsersType' is defined but never used.","'GetProfileResponseType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"280","text":"281"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"282","text":"283"},"Update the dependencies array to be: [props.status, status]",{"range":"284","text":"285"},[2201,2203],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2433,2454],"[filter, currentPage, history]",[493,507],"[props.status, status]"]