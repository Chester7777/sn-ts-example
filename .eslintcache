[{"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx":"1","C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx":"2","C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts":"3","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts":"4","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts":"5","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts":"6","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx":"7","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx":"8","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx":"9","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx":"10","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx":"11","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx":"12","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx":"13","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"14","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx":"15","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"16","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts":"17","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts":"18","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts":"19","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx":"20","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"21","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"22","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"23","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx":"24","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx":"25","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx":"26","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx":"27","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx":"28","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx":"29","C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts":"30","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx":"31","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx":"32","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx":"33","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx":"34","C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts":"35","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx":"36","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"37","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts":"38","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts":"39","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithSuspense.tsx":"40","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Paginator\\Paginator.tsx":"41","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"42"},{"size":2891,"mtime":1620847760255,"results":"43","hashOfConfig":"44"},{"size":468,"mtime":1620546003099,"results":"45","hashOfConfig":"44"},{"size":425,"mtime":1608994354631,"results":"46","hashOfConfig":"44"},{"size":2179,"mtime":1618167202808,"results":"47","hashOfConfig":"44"},{"size":752,"mtime":1616763753558,"results":"48","hashOfConfig":"44"},{"size":5100,"mtime":1621128195427,"results":"49","hashOfConfig":"44"},{"size":152,"mtime":1611702357978,"results":"50","hashOfConfig":"44"},{"size":1458,"mtime":1614980238889,"results":"51","hashOfConfig":"44"},{"size":2616,"mtime":1618232962753,"results":"52","hashOfConfig":"44"},{"size":5825,"mtime":1620847779012,"results":"53","hashOfConfig":"44"},{"size":999,"mtime":1621124249722,"results":"54","hashOfConfig":"44"},{"size":2694,"mtime":1618232962785,"results":"55","hashOfConfig":"44"},{"size":958,"mtime":1618257746522,"results":"56","hashOfConfig":"44"},{"size":3450,"mtime":1621128682867,"results":"57","hashOfConfig":"44"},{"size":1210,"mtime":1616763903512,"results":"58","hashOfConfig":"44"},{"size":540,"mtime":1613726806391,"results":"59","hashOfConfig":"44"},{"size":1640,"mtime":1620545484343,"results":"60","hashOfConfig":"44"},{"size":6369,"mtime":1620847779067,"results":"61","hashOfConfig":"44"},{"size":2771,"mtime":1620053118145,"results":"62","hashOfConfig":"44"},{"size":1516,"mtime":1618575423295,"results":"63","hashOfConfig":"44"},{"size":456,"mtime":1613726806552,"results":"64","hashOfConfig":"44"},{"size":1187,"mtime":1621127567875,"results":"65","hashOfConfig":"44"},{"size":2127,"mtime":1618232962720,"results":"66","hashOfConfig":"44"},{"size":1083,"mtime":1618247695345,"results":"67","hashOfConfig":"44"},{"size":1171,"mtime":1618425356222,"results":"68","hashOfConfig":"44"},{"size":1297,"mtime":1618259836900,"results":"69","hashOfConfig":"44"},{"size":3461,"mtime":1621124972104,"results":"70","hashOfConfig":"44"},{"size":151,"mtime":1611702357671,"results":"71","hashOfConfig":"44"},{"size":159,"mtime":1611702357840,"results":"72","hashOfConfig":"44"},{"size":3111,"mtime":1621124972082,"results":"73","hashOfConfig":"44"},{"size":3549,"mtime":1620847550502,"results":"74","hashOfConfig":"44"},{"size":663,"mtime":1618253719717,"results":"75","hashOfConfig":"44"},{"size":208,"mtime":1615756710483,"results":"76","hashOfConfig":"44"},{"size":1026,"mtime":1618242976735,"results":"77","hashOfConfig":"44"},{"size":395,"mtime":1618425356087,"results":"78","hashOfConfig":"44"},{"size":1537,"mtime":1621122894822,"results":"79","hashOfConfig":"44"},{"size":3093,"mtime":1621117192297,"results":"80","hashOfConfig":"44"},{"size":1335,"mtime":1618751712465,"results":"81","hashOfConfig":"44"},{"size":787,"mtime":1620846459359,"results":"82","hashOfConfig":"44"},{"size":380,"mtime":1620847779042,"results":"83","hashOfConfig":"44"},{"size":2017,"mtime":1620847779054,"results":"84","hashOfConfig":"44"},{"size":1658,"mtime":1621127471241,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"11wfxvs",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx",[],["183","184"],"C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts",["185","186"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx",["187","188"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\nimport Friend from \"../Sidebar/friend\";\r\nimport {FriendsType} from \"../../redux/store\";\r\n\r\ntype NavbarType = {\r\n    //friends: Array<FriendsType>\r\n}\r\n\r\nconst Navbar = (props: NavbarType) => {\r\n\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n\r\n{/*меняет url в браузере без перезакрузки страницы*/}\r\n                <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/dialogs\">Massages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                {/*<Friend friends={props.friends}/>*/}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx",["189"],"import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMassageFormType, AddMessageFormRedux} from \"./Message/AddMassageForm\";\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    let messagesElement = React.createRef<HTMLTextAreaElement>();\r\n    // let newMessageBody = state.newMessageText\r\n\r\n    const dialogsElements = props.dialogsPage.dialogs.map((d) => <DialogItem id={d.id} name={d.name}/>)\r\n    const messagesElements = props.dialogsPage.messages.map((m) => <Message id={m.id} messages={m.messages}/>)\r\n\r\n    // let addMessages = () => {\r\n    //     props.addMessages()\r\n    // }\r\n    let addNewMessage = (values: AddMassageFormType) => {\r\n       props.addMessages(values.newMessageText);\r\n    }\r\n\r\n    // let onMessageChange = () => {\r\n    //     if (messagesElement.current) {\r\n    //         let body = messagesElement.current.value\r\n    //         props.onMessageChange(body)\r\n    //     }\r\n    // }\r\n    // if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n    return (\r\n        <div>\r\n            <h3>Massages</h3>\r\n\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems + \" \" + s.active}>\r\n                    <img src=\"https://i.pinimg.com/originals/9a/da/3b/9ada3bc305a1f45eab527f60da172d53.png\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRm4B-uFtqzkLT-t0vUQtY3tZmoPuPASXzjDw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://socialniesety.ru/files/images/components/articles_journal/originals/instagram/422/kak_sdelat_artavatarku_v_instagram_18.jpg\"\r\n                        alt=\"\"/>\r\n                    <img src=\"https://linedot.ru/wp-content/uploads/2019/10/avatarki-dlya-steam_11.jpg\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://avatars.mds.yandex.net/get-zen_doc/235144/pub_5d92e1109c944600ae6bfc5d_5d92e1c7aad43600adecf124/scale_1200\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQb_O0f0c1A4kOSifv2lykdbjhhXF5r6N-9kw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["190","191"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts",["192","193"],"import {applyMiddleware, combineReducers, compose, createStore, Store} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\nimport {exists} from \"fs\";\r\n\r\n// функция combineReducers склеивает reducer, тоесть создает state\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n// расширение (REDUX_DEVTOOLS_EXTENSION)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// или\r\n// const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// расширение (REDUX_DEVTOOLS_EXTENSION)\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n// функция создает store\r\n// let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AllAppStateType = ReturnType<typeof reducers>\r\nexport type AppStoreType = typeof store\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts",["194","195","196"],"import {usersAPI} from \"../API/API\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USER = \"SET_USER\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    portionSize: number\r\n}\r\n\r\nexport type UsersType = {\r\n    \"name\": string\r\n    \"id\": number\r\n    \"uniqueUrlName\": string | null\r\n    \"photos\": {\r\n        \"small\": string | null\r\n        \"large\": string | null\r\n    },\r\n    \"status\": string | null\r\n    \"followed\": boolean\r\n}\r\n\r\n\r\ntype CountryType = {\r\n    country: string\r\n    citi: string\r\n}\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    portionSize: 10\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                //users: [...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users]\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USER: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsers = (users: Array<UsersType>) => ({type: SET_USER, users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    count: totalUsersCount\r\n} as const)\r\nexport const setIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const setIsFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching, userId\r\n} as const)\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setIsFetching> |\r\n    ReturnType<typeof setIsFollowingProgress>\r\n\r\n\r\nexport type GetUsersThunkCreatorType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    totalCount: number\r\n}\r\n\r\n// type ThunkType = ThunkAction<void, AllAppStateType, unknown, ActionType>\r\nexport const requestUsersThunkCreator = (page: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(setIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\n\r\nlet followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(setIsFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\n//refactoring ублирования кода\r\n// export const follow = (userId: number) => {\r\n//     return async (dispatch: Dispatch) => {\r\n//         dispatch(setIsFollowingProgress(true, userId));\r\n//         let data = await usersAPI.follow(userId);\r\n//         if (data.data.resultCode == 0) {\r\n//             dispatch(followSuccess(userId))\r\n//         }\r\n//         dispatch(setIsFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n// export const unfollow = (userId: number) => {\r\n//     return async (dispatch: Dispatch) => {\r\n//         dispatch(setIsFollowingProgress(true, userId));\r\n//         let data = await usersAPI.unfollow(userId);\r\n//         if (data.data.resultCode == 0) {\r\n//             dispatch(unfollowSuccess(userId))\r\n//         }\r\n//         dispatch(setIsFollowingProgress(false, userId));\r\n//     }\r\n// }","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx",["197"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\"\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout:  () => void\r\n}\r\n\r\n\r\nexport type PropsType = RouteComponentProps<PathParamsType> & MapStatePropsType & MapDispatchPropsType\r\n\r\ntype DataPropsType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\ntype PostPropsType = {\r\n    data: DataPropsType\r\n    resultCode: number\r\n    messages: Array<string>\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    //перенесли в APP\r\n    // componentDidMount() {\r\n    //     this.props.getAuthUserData()\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n\r\n                <Header {...this.props} />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n//передает компаненте данные из URL\r\n\r\nlet WithUrlDataContainerComponent = withRouter(HeaderContainer);\r\n\r\n\r\n//передает в компаненту данные из store\r\nexport default connect<MapStatePropsType,any,any,any>(mapStateToProps, {logout})(WithUrlDataContainerComponent);","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",["198"],"import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {AddMyPostFormRedux, MyPostsType} from \"./Post/AddMyPostForm\";\r\n\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    const postsElement = props.posts.map((p) => <Post id={p.id} message={p.message}\r\n                                                      likes={p.likes}/>)\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let onAddPost = (values: MyPostsType) => {\r\n        props.addPosts(values.newPostText)\r\n    }\r\n    //до подключения Form\r\n    // let onPostChange = () => {\r\n    //     if (newPostElement.current) {\r\n    //         let text = newPostElement.current.value;\r\n    //         props.onPostChangeActionCreator(text)\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className={s.post}>\r\n            <h3>My posts</h3>\r\n            {/*<input type=\"text\"/>*/}\r\n            <AddMyPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.myPosts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["199"],"import React from \"react\";\r\nimport {addPostsActionCreator} from \"../../../redux/profilePage-reducer\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {connect} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../../redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType} from \"../../../redux/store\";\r\n\r\n//самодельный контейнер\r\n// type MyPostsType = {\r\n//     store: StoreType\r\n// }\r\n// const MyPostsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState()\r\n//                 let addPosts = () => {\r\n//                     store.dispatch(addPostsActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text: string) => {\r\n//                     let action = onPostChangeActionCreator(text)\r\n//                     store.dispatch(action)\r\n//                 }\r\n//                 return (\r\n//                     <MyPosts\r\n//                         onPostChangeActionCreator={onPostChange}\r\n//                         addPosts={addPosts}\r\n//                         posts={state.profilePage.posts}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                     />\r\n//                 )\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPosts: (newPostText: string) => void\r\n\r\n}\r\nexport type MyPostsPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\n// подключили react-redux\r\nlet mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n    return {\r\n        // newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPosts: (newPostText: string) => dispatch(addPostsActionCreator(newPostText))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n//\r\n// export default MyPostsContainer;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx",["200"],"import React from \"react\";\r\nimport {LoginFormType, LoginReduxForm} from \"./LoginForm\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: number, rememberMe: boolean) => void\r\n}\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    //isAuth можно и так достать\r\n    // const isAuth = useSelector<AllAppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    const onSubmit = (formData: LoginFormType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: AllAppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx",["201"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx",["202","203"],"import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport userPhoto from \"../../asseds/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    portionSize: number\r\n    // setIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followingInProgress: Array<number>\r\n    // resultCode: number\r\n}\r\ntype PostPropsType = {\r\n    id: number\r\n    resultCode: number\r\n}\r\n\r\n\r\nlet Users = (props: PropsType) => {\r\n    let pageCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage}\r\n        onPageChanged={props.onPageChanged}\r\n        totalItemsCount={props.totalItemsCount}\r\n        pageSize={props.portionSize}\r\n        portionSize={props.portionSize}/>\r\n        {/*<div>*/}\r\n        {/*    {pages.map(p => {*/}\r\n        {/*        return <span*/}\r\n        {/*            key={p}*/}\r\n        {/*            className={props.currentPage === p ? s.selectedPage : \"\"}*/}\r\n        {/*            onClick={(e) => props.onPageChanged(p)}*/}\r\n        {/*        >{p}</span>*/}\r\n        {/*    })}*/}\r\n        {/*</div>*/}\r\n        {/*использовал до componentDidMount*/}\r\n        {/*<button onClick={this.props.getUsers}>get users</button>*/}\r\n        {\r\n            props.users.map((u: UsersType) => {\r\n                    return <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"./profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id)\r\n\r\n                                }}>unfollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}>follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>\r\n                                {u.name}\r\n                            </div>\r\n                            <div>\r\n                                {u.status}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\r\n                                {\"u.location.country\"}\r\n                            </div>\r\n                            <div>\r\n                                {\"u.location.citi\"}\r\n                            </div>\r\n                        </span>\r\n                    </span>\r\n                    </div>\r\n                }\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx",["204"],"import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header = (props: PropsType) => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src=\"https://placeitmarketing.s3.amazonaws.com/public/custompages/logo-maker/Esports-Logo-Maker.png\"/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx",["205"],"import React from \"react\";\r\nimport preloader from \"../../../asseds/images/Pinwheel.gif\";\r\n\r\n\r\nlet Preloader = () => {\r\n\r\n    return <>\r\n         <img src={preloader}/>\r\n    </>\r\n}\r\n\r\nexport default Preloader;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["206"],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts",["207"],"import {Dispatch} from \"redux\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AllAppStateType} from \"./Redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppActionType = InitializedSuccessType\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\nexport const initializeApp = () => (dispatch: ThunkDispatch<AllAppStateType, unknown, AppActionType>) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithSuspense.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Paginator\\Paginator.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":4,"column":9,"nodeType":"214","messageId":"215","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"217","line":80,"column":53,"nodeType":"218","messageId":"219","endLine":80,"endColumn":55},{"ruleId":"212","severity":1,"message":"220","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":14},{"ruleId":"212","severity":1,"message":"221","line":5,"column":9,"nodeType":"214","messageId":"215","endLine":5,"endColumn":20},{"ruleId":"212","severity":1,"message":"222","line":10,"column":9,"nodeType":"214","messageId":"215","endLine":10,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":46,"column":17,"nodeType":"225","endLine":48,"endColumn":53},{"ruleId":"223","severity":1,"message":"224","line":51,"column":17,"nodeType":"225","endLine":51,"endColumn":94},{"ruleId":"212","severity":1,"message":"226","line":1,"column":65,"nodeType":"214","messageId":"215","endLine":1,"endColumn":70},{"ruleId":"212","severity":1,"message":"227","line":10,"column":9,"nodeType":"214","messageId":"215","endLine":10,"endColumn":15},{"ruleId":"212","severity":1,"message":"228","line":36,"column":6,"nodeType":"214","messageId":"215","endLine":36,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":93,"column":65,"nodeType":"218","messageId":"219","endLine":93,"endColumn":67},{"ruleId":"216","severity":1,"message":"229","line":150,"column":34,"nodeType":"218","messageId":"219","endLine":150,"endColumn":36},{"ruleId":"212","severity":1,"message":"230","line":29,"column":6,"nodeType":"214","messageId":"215","endLine":29,"endColumn":19},{"ruleId":"212","severity":1,"message":"231","line":12,"column":9,"nodeType":"214","messageId":"215","endLine":12,"endColumn":23},{"ruleId":"212","severity":1,"message":"232","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"212","severity":1,"message":"233","line":3,"column":18,"nodeType":"214","messageId":"215","endLine":3,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":58,"column":44,"nodeType":"218","messageId":"219","endLine":58,"endColumn":46},{"ruleId":"212","severity":1,"message":"230","line":22,"column":6,"nodeType":"214","messageId":"215","endLine":22,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":59,"column":29,"nodeType":"225","endLine":59,"endColumn":117},{"ruleId":"223","severity":1,"message":"224","line":9,"column":9,"nodeType":"225","endLine":10,"endColumn":115},{"ruleId":"223","severity":1,"message":"224","line":8,"column":10,"nodeType":"225","endLine":8,"endColumn":32},{"ruleId":"234","severity":1,"message":"235","line":17,"column":8,"nodeType":"236","endLine":17,"endColumn":22,"suggestions":"237"},{"ruleId":"212","severity":1,"message":"238","line":1,"column":9,"nodeType":"214","messageId":"215","endLine":1,"endColumn":17},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"@typescript-eslint/no-unused-vars","'ActionTypes' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Friend' is defined but never used.","'FriendsType' is defined but never used.","'messagesElement' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Store' is defined but never used.","'exists' is defined but never used.","'CountryType' is defined but never used.","Expected '===' and instead saw '=='.","'PostPropsType' is defined but never used.","'newPostElement' is assigned a value but never used.","'React' is defined but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},"Update the dependencies array to be: [props.status, status]",{"range":"244","text":"245"},[464,478],"[props.status, status]"]