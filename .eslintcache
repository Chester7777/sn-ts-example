[{"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx":"1","C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx":"2","C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts":"3","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts":"4","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts":"5","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts":"6","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx":"7","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx":"8","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx":"9","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx":"10","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx":"11","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx":"12","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx":"13","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"14","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx":"15","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"16","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts":"17","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts":"18","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts":"19","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx":"20","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"21","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"22","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"23","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx":"24","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx":"25","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx":"26","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx":"27","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx":"28","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx":"29","C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts":"30","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx":"31","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx":"32","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx":"33","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx":"34","C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts":"35","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx":"36","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"37","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts":"38","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts":"39","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithSuspense.tsx":"40","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Paginator\\Paginator.tsx":"41","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"42"},{"size":2891,"mtime":1620847760255,"results":"43","hashOfConfig":"44"},{"size":468,"mtime":1620546003099,"results":"45","hashOfConfig":"44"},{"size":425,"mtime":1608994354631,"results":"46","hashOfConfig":"44"},{"size":2179,"mtime":1618167202808,"results":"47","hashOfConfig":"44"},{"size":752,"mtime":1616763753558,"results":"48","hashOfConfig":"44"},{"size":5106,"mtime":1621181974768,"results":"49","hashOfConfig":"44"},{"size":152,"mtime":1611702357978,"results":"50","hashOfConfig":"44"},{"size":1458,"mtime":1614980238889,"results":"51","hashOfConfig":"44"},{"size":2616,"mtime":1618232962753,"results":"52","hashOfConfig":"44"},{"size":5825,"mtime":1620847779012,"results":"53","hashOfConfig":"44"},{"size":1088,"mtime":1621167620048,"results":"54","hashOfConfig":"44"},{"size":2694,"mtime":1618232962785,"results":"55","hashOfConfig":"44"},{"size":958,"mtime":1618257746522,"results":"56","hashOfConfig":"44"},{"size":3583,"mtime":1621182337964,"results":"57","hashOfConfig":"44"},{"size":1210,"mtime":1616763903512,"results":"58","hashOfConfig":"44"},{"size":540,"mtime":1613726806391,"results":"59","hashOfConfig":"44"},{"size":1640,"mtime":1620545484343,"results":"60","hashOfConfig":"44"},{"size":6371,"mtime":1621182537057,"results":"61","hashOfConfig":"44"},{"size":3477,"mtime":1621181019994,"results":"62","hashOfConfig":"44"},{"size":1516,"mtime":1618575423295,"results":"63","hashOfConfig":"44"},{"size":456,"mtime":1613726806552,"results":"64","hashOfConfig":"44"},{"size":1187,"mtime":1621127567875,"results":"65","hashOfConfig":"44"},{"size":2127,"mtime":1618232962720,"results":"66","hashOfConfig":"44"},{"size":1083,"mtime":1618247695345,"results":"67","hashOfConfig":"44"},{"size":1332,"mtime":1621180988389,"results":"68","hashOfConfig":"44"},{"size":1608,"mtime":1621180801958,"results":"69","hashOfConfig":"44"},{"size":3670,"mtime":1621182117186,"results":"70","hashOfConfig":"44"},{"size":151,"mtime":1611702357671,"results":"71","hashOfConfig":"44"},{"size":159,"mtime":1611702357840,"results":"72","hashOfConfig":"44"},{"size":3281,"mtime":1621181019988,"results":"73","hashOfConfig":"44"},{"size":3549,"mtime":1620847550502,"results":"74","hashOfConfig":"44"},{"size":663,"mtime":1618253719717,"results":"75","hashOfConfig":"44"},{"size":208,"mtime":1615756710483,"results":"76","hashOfConfig":"44"},{"size":1026,"mtime":1618242976735,"results":"77","hashOfConfig":"44"},{"size":395,"mtime":1618425356087,"results":"78","hashOfConfig":"44"},{"size":1537,"mtime":1621122894822,"results":"79","hashOfConfig":"44"},{"size":3093,"mtime":1621117192297,"results":"80","hashOfConfig":"44"},{"size":1335,"mtime":1618751712465,"results":"81","hashOfConfig":"44"},{"size":787,"mtime":1620846459359,"results":"82","hashOfConfig":"44"},{"size":380,"mtime":1620847779042,"results":"83","hashOfConfig":"44"},{"size":2017,"mtime":1620847779054,"results":"84","hashOfConfig":"44"},{"size":1555,"mtime":1621181917975,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"11wfxvs",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx",[],["182","183"],"C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts",["184"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx",["185","186"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\nimport Friend from \"../Sidebar/friend\";\r\nimport {FriendsType} from \"../../redux/store\";\r\n\r\ntype NavbarType = {\r\n    //friends: Array<FriendsType>\r\n}\r\n\r\nconst Navbar = (props: NavbarType) => {\r\n\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n\r\n{/*меняет url в браузере без перезакрузки страницы*/}\r\n                <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/dialogs\">Massages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                {/*<Friend friends={props.friends}/>*/}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx",["187"],"import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMassageFormType, AddMessageFormRedux} from \"./Message/AddMassageForm\";\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    let messagesElement = React.createRef<HTMLTextAreaElement>();\r\n    // let newMessageBody = state.newMessageText\r\n\r\n    const dialogsElements = props.dialogsPage.dialogs.map((d) => <DialogItem id={d.id} name={d.name}/>)\r\n    const messagesElements = props.dialogsPage.messages.map((m) => <Message id={m.id} messages={m.messages}/>)\r\n\r\n    // let addMessages = () => {\r\n    //     props.addMessages()\r\n    // }\r\n    let addNewMessage = (values: AddMassageFormType) => {\r\n       props.addMessages(values.newMessageText);\r\n    }\r\n\r\n    // let onMessageChange = () => {\r\n    //     if (messagesElement.current) {\r\n    //         let body = messagesElement.current.value\r\n    //         props.onMessageChange(body)\r\n    //     }\r\n    // }\r\n    // if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n    return (\r\n        <div>\r\n            <h3>Massages</h3>\r\n\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems + \" \" + s.active}>\r\n                    <img src=\"https://i.pinimg.com/originals/9a/da/3b/9ada3bc305a1f45eab527f60da172d53.png\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRm4B-uFtqzkLT-t0vUQtY3tZmoPuPASXzjDw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://socialniesety.ru/files/images/components/articles_journal/originals/instagram/422/kak_sdelat_artavatarku_v_instagram_18.jpg\"\r\n                        alt=\"\"/>\r\n                    <img src=\"https://linedot.ru/wp-content/uploads/2019/10/avatarki-dlya-steam_11.jpg\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://avatars.mds.yandex.net/get-zen_doc/235144/pub_5d92e1109c944600ae6bfc5d_5d92e1c7aad43600adecf124/scale_1200\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQb_O0f0c1A4kOSifv2lykdbjhhXF5r6N-9kw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["188","189","190"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts",["191","192"],"import {applyMiddleware, combineReducers, compose, createStore, Store} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\nimport {exists} from \"fs\";\r\n\r\n// функция combineReducers склеивает reducer, тоесть создает state\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n// расширение (REDUX_DEVTOOLS_EXTENSION)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// или\r\n// const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// расширение (REDUX_DEVTOOLS_EXTENSION)\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n// функция создает store\r\n// let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AllAppStateType = ReturnType<typeof reducers>\r\nexport type AppStoreType = typeof store\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts",["193","194","195"],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx",["196"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\"\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout:  () => void\r\n}\r\n\r\n\r\nexport type PropsType = RouteComponentProps<PathParamsType> & MapStatePropsType & MapDispatchPropsType\r\n\r\ntype DataPropsType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\ntype PostPropsType = {\r\n    data: DataPropsType\r\n    resultCode: number\r\n    messages: Array<string>\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    //перенесли в APP\r\n    // componentDidMount() {\r\n    //     this.props.getAuthUserData()\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n\r\n                <Header {...this.props} />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n//передает компаненте данные из URL\r\n\r\nlet WithUrlDataContainerComponent = withRouter(HeaderContainer);\r\n\r\n\r\n//передает в компаненту данные из store\r\nexport default connect<MapStatePropsType,any,any,any>(mapStateToProps, {logout})(WithUrlDataContainerComponent);","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",["197"],"import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {AddMyPostFormRedux, MyPostsType} from \"./Post/AddMyPostForm\";\r\n\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    const postsElement = props.posts.map((p) => <Post id={p.id} message={p.message}\r\n                                                      likes={p.likes}/>)\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let onAddPost = (values: MyPostsType) => {\r\n        props.addPosts(values.newPostText)\r\n    }\r\n    //до подключения Form\r\n    // let onPostChange = () => {\r\n    //     if (newPostElement.current) {\r\n    //         let text = newPostElement.current.value;\r\n    //         props.onPostChangeActionCreator(text)\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className={s.post}>\r\n            <h3>My posts</h3>\r\n            {/*<input type=\"text\"/>*/}\r\n            <AddMyPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.myPosts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["198"],"import React from \"react\";\r\nimport {addPostsActionCreator} from \"../../../redux/profilePage-reducer\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {connect} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../../redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType} from \"../../../redux/store\";\r\n\r\n//самодельный контейнер\r\n// type MyPostsType = {\r\n//     store: StoreType\r\n// }\r\n// const MyPostsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState()\r\n//                 let addPosts = () => {\r\n//                     store.dispatch(addPostsActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text: string) => {\r\n//                     let action = onPostChangeActionCreator(text)\r\n//                     store.dispatch(action)\r\n//                 }\r\n//                 return (\r\n//                     <MyPosts\r\n//                         onPostChangeActionCreator={onPostChange}\r\n//                         addPosts={addPosts}\r\n//                         posts={state.profilePage.posts}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                     />\r\n//                 )\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPosts: (newPostText: string) => void\r\n\r\n}\r\nexport type MyPostsPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\n// подключили react-redux\r\nlet mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n    return {\r\n        // newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPosts: (newPostText: string) => dispatch(addPostsActionCreator(newPostText))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n//\r\n// export default MyPostsContainer;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx",["199"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx",["200"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx",["201","202"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts",["203"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx",["204","205"],"import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport userPhoto from \"../../asseds/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    portionSize: number\r\n    // setIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followingInProgress: Array<number>\r\n    // resultCode: number\r\n}\r\ntype PostPropsType = {\r\n    id: number\r\n    resultCode: number\r\n}\r\n\r\n\r\nlet Users = (props: PropsType) => {\r\n    let pageCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage}\r\n        onPageChanged={props.onPageChanged}\r\n        totalItemsCount={props.totalItemsCount}\r\n        pageSize={props.portionSize}\r\n        portionSize={props.portionSize}/>\r\n        {/*<div>*/}\r\n        {/*    {pages.map(p => {*/}\r\n        {/*        return <span*/}\r\n        {/*            key={p}*/}\r\n        {/*            className={props.currentPage === p ? s.selectedPage : \"\"}*/}\r\n        {/*            onClick={(e) => props.onPageChanged(p)}*/}\r\n        {/*        >{p}</span>*/}\r\n        {/*    })}*/}\r\n        {/*</div>*/}\r\n        {/*использовал до componentDidMount*/}\r\n        {/*<button onClick={this.props.getUsers}>get users</button>*/}\r\n        {\r\n            props.users.map((u: UsersType) => {\r\n                    return <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"./profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id)\r\n\r\n                                }}>unfollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}>follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>\r\n                                {u.name}\r\n                            </div>\r\n                            <div>\r\n                                {u.status}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\r\n                                {\"u.location.country\"}\r\n                            </div>\r\n                            <div>\r\n                                {\"u.location.citi\"}\r\n                            </div>\r\n                        </span>\r\n                    </span>\r\n                    </div>\r\n                }\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx",["206"],"import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header = (props: PropsType) => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src=\"https://placeitmarketing.s3.amazonaws.com/public/custompages/logo-maker/Esports-Logo-Maker.png\"/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx",["207"],"import React from \"react\";\r\nimport preloader from \"../../../asseds/images/Pinwheel.gif\";\r\n\r\n\r\nlet Preloader = () => {\r\n\r\n    return <>\r\n         <img src={preloader}/>\r\n    </>\r\n}\r\n\r\nexport default Preloader;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["208"],"import React, {useEffect, useState} from \"react\";\r\n\r\nexport type ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus = (props: ProfileStatusPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n    const changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={changeStatus}\r\n                    autoFocus={true}\r\n                    onBlur={deActivateEditMode}\r\n                    type=\"text\"\r\n                    value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n//таже компонента, но классовая\r\n// class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n//     state = {\r\n//         aditMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: true\r\n//         })\r\n//     }\r\n//     deActivateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: false\r\n//         })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//     changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         })\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.aditMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n//                 </div>}\r\n//                 {this.state.aditMode &&\r\n//                 <div>\r\n//                     <input\r\n//                         onChange={this.changeStatus}\r\n//                         autoFocus={true}\r\n//                         onBlur={this.deActivateEditMode}\r\n//                         type=\"text\"\r\n//                         value={this.props.status || \"--------\"}/>\r\n//                 </div>}\r\n//             </div>\r\n//         )\r\n//     }\r\n//\r\n// }\r\n// export default ProfileStatus;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts",["209"],"import {Dispatch} from \"redux\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AllAppStateType} from \"./Redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppActionType = InitializedSuccessType\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\nexport const initializeApp = () => (dispatch: ThunkDispatch<AllAppStateType, unknown, AppActionType>) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithSuspense.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Paginator\\Paginator.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":80,"column":53,"nodeType":"216","messageId":"217","endLine":80,"endColumn":55},{"ruleId":"218","severity":1,"message":"219","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":14},{"ruleId":"218","severity":1,"message":"222","line":5,"column":9,"nodeType":"220","messageId":"221","endLine":5,"endColumn":20},{"ruleId":"218","severity":1,"message":"223","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":24},{"ruleId":"218","severity":1,"message":"224","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":17},{"ruleId":"225","severity":1,"message":"226","line":44,"column":17,"nodeType":"227","endLine":46,"endColumn":53},{"ruleId":"225","severity":1,"message":"226","line":49,"column":17,"nodeType":"227","endLine":49,"endColumn":94},{"ruleId":"218","severity":1,"message":"228","line":1,"column":65,"nodeType":"220","messageId":"221","endLine":1,"endColumn":70},{"ruleId":"218","severity":1,"message":"229","line":10,"column":9,"nodeType":"220","messageId":"221","endLine":10,"endColumn":15},{"ruleId":"218","severity":1,"message":"230","line":36,"column":6,"nodeType":"220","messageId":"221","endLine":36,"endColumn":17},{"ruleId":"214","severity":1,"message":"215","line":93,"column":65,"nodeType":"216","messageId":"217","endLine":93,"endColumn":67},{"ruleId":"214","severity":1,"message":"231","line":150,"column":34,"nodeType":"216","messageId":"217","endLine":150,"endColumn":36},{"ruleId":"218","severity":1,"message":"232","line":29,"column":6,"nodeType":"220","messageId":"221","endLine":29,"endColumn":19},{"ruleId":"218","severity":1,"message":"233","line":12,"column":9,"nodeType":"220","messageId":"221","endLine":12,"endColumn":23},{"ruleId":"218","severity":1,"message":"234","line":1,"column":8,"nodeType":"220","messageId":"221","endLine":1,"endColumn":13},{"ruleId":"218","severity":1,"message":"235","line":3,"column":18,"nodeType":"220","messageId":"221","endLine":3,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":32,"column":34,"nodeType":"227","endLine":32,"endColumn":64},{"ruleId":"218","severity":1,"message":"236","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":61,"column":44,"nodeType":"216","messageId":"217","endLine":61,"endColumn":46},{"ruleId":"218","severity":1,"message":"237","line":35,"column":6,"nodeType":"220","messageId":"221","endLine":35,"endColumn":28},{"ruleId":"218","severity":1,"message":"232","line":22,"column":6,"nodeType":"220","messageId":"221","endLine":22,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":59,"column":29,"nodeType":"227","endLine":59,"endColumn":117},{"ruleId":"225","severity":1,"message":"226","line":9,"column":9,"nodeType":"227","endLine":10,"endColumn":115},{"ruleId":"225","severity":1,"message":"226","line":8,"column":10,"nodeType":"227","endLine":8,"endColumn":32},{"ruleId":"238","severity":1,"message":"239","line":17,"column":8,"nodeType":"240","endLine":17,"endColumn":22,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"242","line":1,"column":9,"nodeType":"220","messageId":"221","endLine":1,"endColumn":17},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Friend' is defined but never used.","Identifier","unusedVar","'FriendsType' is defined but never used.","'messagesElement' is assigned a value but never used.","'Preloader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Store' is defined but never used.","'exists' is defined but never used.","'CountryType' is defined but never used.","Expected '===' and instead saw '=='.","'PostPropsType' is defined but never used.","'newPostElement' is assigned a value but never used.","'React' is defined but never used.","'useSelector' is defined but never used.","'ProfileInfo' is defined but never used.","'GetProfileResponseType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},"Update the dependencies array to be: [props.status, status]",{"range":"248","text":"249"},[464,478],"[props.status, status]"]