[{"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx":"1","C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx":"2","C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts":"3","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts":"4","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts":"5","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts":"6","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx":"7","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx":"8","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx":"9","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx":"10","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx":"11","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx":"12","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx":"13","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"14","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx":"15","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"16","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts":"17","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts":"18","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts":"19","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx":"20","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"21","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"22","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"23","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx":"24","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx":"25","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx":"26","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx":"27","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx":"28","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx":"29","C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts":"30","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx":"31","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx":"32","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx":"33","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx":"34","C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts":"35","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx":"36","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"37","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts":"38","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts":"39"},{"size":2528,"mtime":1618752313364,"results":"40","hashOfConfig":"41"},{"size":763,"mtime":1614283771265,"results":"42","hashOfConfig":"41"},{"size":425,"mtime":1608994354631,"results":"43","hashOfConfig":"41"},{"size":2179,"mtime":1618167202808,"results":"44","hashOfConfig":"41"},{"size":752,"mtime":1616763753558,"results":"45","hashOfConfig":"41"},{"size":3723,"mtime":1619979706793,"results":"46","hashOfConfig":"41"},{"size":152,"mtime":1611702357978,"results":"47","hashOfConfig":"41"},{"size":1458,"mtime":1614980238889,"results":"48","hashOfConfig":"41"},{"size":2616,"mtime":1618232962753,"results":"49","hashOfConfig":"41"},{"size":5585,"mtime":1618750862747,"results":"50","hashOfConfig":"41"},{"size":600,"mtime":1617653454326,"results":"51","hashOfConfig":"41"},{"size":2694,"mtime":1618232962785,"results":"52","hashOfConfig":"41"},{"size":958,"mtime":1618257746522,"results":"53","hashOfConfig":"41"},{"size":1101,"mtime":1617654851640,"results":"54","hashOfConfig":"41"},{"size":1210,"mtime":1616763903512,"results":"55","hashOfConfig":"41"},{"size":540,"mtime":1613726806391,"results":"56","hashOfConfig":"41"},{"size":1090,"mtime":1618577130531,"results":"57","hashOfConfig":"41"},{"size":5505,"mtime":1618751028983,"results":"58","hashOfConfig":"41"},{"size":2894,"mtime":1618577261762,"results":"59","hashOfConfig":"41"},{"size":1516,"mtime":1618575423295,"results":"60","hashOfConfig":"41"},{"size":456,"mtime":1613726806552,"results":"61","hashOfConfig":"41"},{"size":1176,"mtime":1619972037505,"results":"62","hashOfConfig":"41"},{"size":2127,"mtime":1618232962720,"results":"63","hashOfConfig":"41"},{"size":1083,"mtime":1618247695345,"results":"64","hashOfConfig":"41"},{"size":1171,"mtime":1618425356222,"results":"65","hashOfConfig":"41"},{"size":1297,"mtime":1618259836900,"results":"66","hashOfConfig":"41"},{"size":2555,"mtime":1618578905852,"results":"67","hashOfConfig":"41"},{"size":151,"mtime":1611702357671,"results":"68","hashOfConfig":"41"},{"size":159,"mtime":1611702357840,"results":"69","hashOfConfig":"41"},{"size":2677,"mtime":1618750783631,"results":"70","hashOfConfig":"41"},{"size":3185,"mtime":1616766989918,"results":"71","hashOfConfig":"41"},{"size":663,"mtime":1618253719717,"results":"72","hashOfConfig":"41"},{"size":208,"mtime":1615756710483,"results":"73","hashOfConfig":"41"},{"size":1026,"mtime":1618242976735,"results":"74","hashOfConfig":"41"},{"size":395,"mtime":1618425356087,"results":"75","hashOfConfig":"41"},{"size":1010,"mtime":1618423781073,"results":"76","hashOfConfig":"41"},{"size":3077,"mtime":1619457025557,"results":"77","hashOfConfig":"41"},{"size":1335,"mtime":1618751712465,"results":"78","hashOfConfig":"41"},{"size":682,"mtime":1618750411611,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"11wfxvs",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"83"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"83"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx",["173","174"],"import React from \"react\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport \"./App.css\";\nimport Music from \"./Components/Music/Music\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport News from \"./Components/News/news\";\nimport Setting from \"./Components/Setting/Setting\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\"\nimport Login from \"./Components/Login/Login\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport {getAuthUserData} from \"../src/redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AllAppStateType} from \"./redux/Redux-store\";\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\nimport {initializeApp} from \"./redux/app-reducer\"\n\n\ntype AppType = {\n    initializeApp: () => void\n    initialized: boolean\n}\n\n\nclass App extends React.Component<AppType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <BrowserRouter>\n                <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className=\"app-wrapper-content\">\n                        {/*Route - реактовская компонента, которая при совпадении с ее path позовет колбэк находящийся в ней*/}\n                        <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/news\" render={() => <News/>}/>\n                        <Route path=\"/music\" render={() => <Music/>}/>\n                        <Route path=\"/settings\" render={() => <Setting/>}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/login\" render={() => <Login/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AllAppStateType) => ({\n    initialized: state.app.initialized\n})\n// const mapDispatchToProps = (state: AllAppStateType) => ({\n//     getAuthUserData:\n// })\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp}))(App);",["175","176"],"C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts",["177"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx",["178","179"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\nimport Friend from \"../Sidebar/friend\";\r\nimport {FriendsType} from \"../../redux/store\";\r\n\r\ntype NavbarType = {\r\n    //friends: Array<FriendsType>\r\n}\r\n\r\nconst Navbar = (props: NavbarType) => {\r\n\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n\r\n{/*меняет url в браузере без перезакрузки страницы*/}\r\n                <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/dialogs\">Massages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                {/*<Friend friends={props.friends}/>*/}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx",["180"],"import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMassageFormType, AddMessageFormRedux} from \"./Message/AddMassageForm\";\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    let messagesElement = React.createRef<HTMLTextAreaElement>();\r\n    // let newMessageBody = state.newMessageText\r\n\r\n    const dialogsElements = props.dialogsPage.dialogs.map((d) => <DialogItem id={d.id} name={d.name}/>)\r\n    const messagesElements = props.dialogsPage.messages.map((m) => <Message id={m.id} messages={m.messages}/>)\r\n\r\n    // let addMessages = () => {\r\n    //     props.addMessages()\r\n    // }\r\n    let addNewMessage = (values: AddMassageFormType) => {\r\n       props.addMessages(values.newMessageText);\r\n    }\r\n\r\n    // let onMessageChange = () => {\r\n    //     if (messagesElement.current) {\r\n    //         let body = messagesElement.current.value\r\n    //         props.onMessageChange(body)\r\n    //     }\r\n    // }\r\n    // if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n    return (\r\n        <div>\r\n            <h3>Massages</h3>\r\n\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems + \" \" + s.active}>\r\n                    <img src=\"https://i.pinimg.com/originals/9a/da/3b/9ada3bc305a1f45eab527f60da172d53.png\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRm4B-uFtqzkLT-t0vUQtY3tZmoPuPASXzjDw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://socialniesety.ru/files/images/components/articles_journal/originals/instagram/422/kak_sdelat_artavatarku_v_instagram_18.jpg\"\r\n                        alt=\"\"/>\r\n                    <img src=\"https://linedot.ru/wp-content/uploads/2019/10/avatarki-dlya-steam_11.jpg\" alt=\"\"/>\r\n                    <img\r\n                        src=\"https://avatars.mds.yandex.net/get-zen_doc/235144/pub_5d92e1109c944600ae6bfc5d_5d92e1c7aad43600adecf124/scale_1200\"\r\n                        alt=\"\"/>\r\n                    <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQb_O0f0c1A4kOSifv2lykdbjhhXF5r6N-9kw&usqp=CAU\"\r\n                        alt=\"\"/>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\HOC\\WithAuthRedirect.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["181","182"],"import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport {ProfilePropsType} from \"../../../redux/profilePage-reducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfilePropsType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n\r\n}\r\nexport type ProfileStatusPropsType = {\r\n    status: string\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.image}>\r\n                <img\r\n                    src=\"https://cdn.pixabay.com/photo/2016/10/21/09/29/earth-1757617__480.jpg\"\r\n                    className={s.image_backgraund}/>\r\n            </div>\r\n            <div className={s.description}>\r\n                <img src={props.profile.photos?.large}/>\r\n\r\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts",["183","184","185","186"],"import {usersAPI} from \"../API/API\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USER = \"SET_USER\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport type UsersType = {\r\n    \"name\": string\r\n    \"id\": number\r\n    \"uniqueUrlName\": string | null\r\n    \"photos\": {\r\n        \"small\": string | null\r\n        \"large\": string | null\r\n    },\r\n    \"status\": string | null\r\n    \"followed\": boolean\r\n}\r\n\r\n\r\ntype CountryType = {\r\n    country: string\r\n    citi: string\r\n}\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                //users: [...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users]\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USER: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsers = (users: Array<UsersType>) => ({type: SET_USER, users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    count: totalUsersCount\r\n} as const)\r\nexport const setIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const setIsFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching, userId\r\n} as const)\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setIsFetching> |\r\n    ReturnType<typeof setIsFollowingProgress>\r\n\r\n\r\nexport type GetUsersThunkCreatorType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    totalCount: number\r\n}\r\n\r\n// type ThunkType = ThunkAction<void, AllAppStateType, unknown, ActionType>\r\nexport const requestUsersThunkCreator = (page: number, pageSize: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(setIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setIsFollowingProgress(true, userId));\r\n        usersAPI.follow(userId).then(data => {\r\n            if (data.data.resultCode == 0) {\r\n                dispatch(followSuccess(userId))\r\n            }\r\n            dispatch(setIsFollowingProgress(false, userId));\r\n        })\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setIsFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(data => {\r\n            if (data.data.resultCode == 0) {\r\n                dispatch(unfollowSuccess(userId))\r\n            }\r\n            dispatch(setIsFollowingProgress(false, userId));\r\n        })\r\n    }\r\n}","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx",["187"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\"\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout:  () => void\r\n}\r\n\r\n\r\nexport type PropsType = RouteComponentProps<PathParamsType> & MapStatePropsType & MapDispatchPropsType\r\n\r\ntype DataPropsType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\ntype PostPropsType = {\r\n    data: DataPropsType\r\n    resultCode: number\r\n    messages: Array<string>\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    //перенесли в APP\r\n    // componentDidMount() {\r\n    //     this.props.getAuthUserData()\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n\r\n                <Header {...this.props} />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n//передает компаненте данные из URL\r\n\r\nlet WithUrlDataContainerComponent = withRouter(HeaderContainer);\r\n\r\n\r\n//передает в компаненту данные из store\r\nexport default connect<MapStatePropsType,any,any,any>(mapStateToProps, {logout})(WithUrlDataContainerComponent);","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",["188"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["189"],"import React from \"react\";\r\nimport {addPostsActionCreator} from \"../../../redux/profilePage-reducer\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {connect} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../../redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType} from \"../../../redux/store\";\r\n\r\n//самодельный контейнер\r\n// type MyPostsType = {\r\n//     store: StoreType\r\n// }\r\n// const MyPostsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState()\r\n//                 let addPosts = () => {\r\n//                     store.dispatch(addPostsActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text: string) => {\r\n//                     let action = onPostChangeActionCreator(text)\r\n//                     store.dispatch(action)\r\n//                 }\r\n//                 return (\r\n//                     <MyPosts\r\n//                         onPostChangeActionCreator={onPostChange}\r\n//                         addPosts={addPosts}\r\n//                         posts={state.profilePage.posts}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                     />\r\n//                 )\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPosts: (newPostText: string) => void\r\n\r\n}\r\nexport type MyPostsPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\n// подключили react-redux\r\nlet mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n    return {\r\n        // newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPosts: (newPostText: string) => dispatch(addPostsActionCreator(newPostText))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n//\r\n// export default MyPostsContainer;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\AddMassageForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\Login.tsx",["190"],"import React from \"react\";\r\nimport {LoginFormType, LoginReduxForm} from \"./LoginForm\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: number, rememberMe: boolean) => void\r\n}\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    //isAuth можно и так достать\r\n    // const isAuth = useSelector<AllAppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    const onSubmit = (formData: LoginFormType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: AllAppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Login\\LoginForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts",["191","192"],"import axios from \"axios\";\r\nimport {GetTasksResponseType} from \"../Components/Users/UsersContainer\";\r\nimport {PostPropsType} from \"../redux/auth-reducer\";\r\nimport {ProfilePropsType, StatusProfileType} from \"../redux/profilePage-reducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"0b171657-160a-4f70-93fb-80213f27dfbf\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<GetTasksResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<LoginAuthResponseType>(`follow/${id}`)\r\n        // .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<PostPropsType>(`follow/${id}`)\r\n        // .then(response => response.data)\r\n    }\r\n}\r\n//\r\ntype GetProfileResponseType = {\r\n    userId: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<StatusProfileType>(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\ntype MeResponseType = {\r\n    data: {\r\n        id: string\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\ntype LoginResponseType = {\r\n    data: {\r\n        userId: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\ntype LoginAuthResponseType = {\r\n    data: {}\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`);\r\n    },\r\n    login(email: string, password: number, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    loginAuth() {\r\n        return instance.delete<LoginAuthResponseType>(`auth/login`)\r\n    }\r\n}\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx",["193","194"],"import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport userPhoto from \"../../asseds/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    // setIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followingInProgress: Array<number>\r\n    // resultCode: number\r\n}\r\ntype PostPropsType = {\r\n    id: number\r\n    resultCode: number\r\n}\r\n\r\n\r\nlet Users = (props: PropsType) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span\r\n                    key={p}\r\n                    className={props.currentPage === p ? s.selectedPage : \"\"}\r\n                    onClick={(e) => props.onPageChanged(p)}\r\n                >{p}</span>\r\n            })}\r\n        </div>\r\n        {/*использовал до componentDidMount*/}\r\n        {/*<button onClick={this.props.getUsers}>get users</button>*/}\r\n        {\r\n            props.users.map((u: UsersType) => {\r\n                    return <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"./profile/\" + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id)\r\n\r\n                                }}>unfollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}>follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>\r\n                                {u.name}\r\n                            </div>\r\n                            <div>\r\n                                {u.status}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\r\n                                {\"u.location.country\"}\r\n                            </div>\r\n                            <div>\r\n                                {\"u.location.citi\"}\r\n                            </div>\r\n                        </span>\r\n                    </span>\r\n                    </div>\r\n                }\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx",["195"],"import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header = (props: PropsType) => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src=\"https://placeitmarketing.s3.amazonaws.com/public/custompages/logo-maker/Esports-Logo-Maker.png\"/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx",["196"],"import React from \"react\";\r\nimport preloader from \"../../../asseds/images/Pinwheel.gif\";\r\n\r\n\r\nlet Preloader = () => {\r\n\r\n    return <>\r\n         <img src={preloader}/>\r\n    </>\r\n}\r\n\r\nexport default Preloader;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\AddMyPostForm.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Utils\\Validators\\validators.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\FormsControls\\FormsControls.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["197"],"import React, {useEffect, useState} from \"react\";\r\n\r\nexport type ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus = (props: ProfileStatusPropsType) => {\r\n\r\n    const [aditMode, setAditMode] = useState<boolean>(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setAditMode(true)\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setAditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n    const changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!aditMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\r\n            </div>}\r\n            {aditMode &&\r\n            <div>\r\n                <input\r\n                    onChange={changeStatus}\r\n                    autoFocus={true}\r\n                    onBlur={deActivateEditMode}\r\n                    type=\"text\"\r\n                    value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n//таже компонента, но классовая\r\n// class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n//     state = {\r\n//         aditMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: true\r\n//         })\r\n//     }\r\n//     deActivateEditMode = () => {\r\n//         this.setState({\r\n//             aditMode: false\r\n//         })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//     changeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         })\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.aditMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n//                 </div>}\r\n//                 {this.state.aditMode &&\r\n//                 <div>\r\n//                     <input\r\n//                         onChange={this.changeStatus}\r\n//                         autoFocus={true}\r\n//                         onBlur={this.deActivateEditMode}\r\n//                         type=\"text\"\r\n//                         value={this.props.status || \"--------\"}/>\r\n//                 </div>}\r\n//             </div>\r\n//         )\r\n//     }\r\n//\r\n// }\r\n// export default ProfileStatus;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\app-reducer.ts",["198"],"import {Dispatch} from \"redux\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AllAppStateType} from \"./Redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppActionType = InitializedSuccessType\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\nexport const initializeApp = () => (dispatch: ThunkDispatch<AllAppStateType, unknown, AppActionType>) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-selectors.ts",[],{"ruleId":"199","severity":1,"message":"200","line":2,"column":31,"nodeType":"201","messageId":"202","endLine":2,"endColumn":41},{"ruleId":"199","severity":1,"message":"203","line":13,"column":9,"nodeType":"201","messageId":"202","endLine":13,"endColumn":24},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":76,"column":53,"nodeType":"210","messageId":"211","endLine":76,"endColumn":55},{"ruleId":"199","severity":1,"message":"212","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"213","line":5,"column":9,"nodeType":"201","messageId":"202","endLine":5,"endColumn":20},{"ruleId":"199","severity":1,"message":"214","line":10,"column":9,"nodeType":"201","messageId":"202","endLine":10,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":25,"column":17,"nodeType":"217","endLine":27,"endColumn":53},{"ruleId":"215","severity":1,"message":"216","line":30,"column":17,"nodeType":"217","endLine":30,"endColumn":57},{"ruleId":"199","severity":1,"message":"218","line":35,"column":6,"nodeType":"201","messageId":"202","endLine":35,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":91,"column":65,"nodeType":"210","messageId":"211","endLine":91,"endColumn":67},{"ruleId":"208","severity":1,"message":"219","line":148,"column":38,"nodeType":"210","messageId":"211","endLine":148,"endColumn":40},{"ruleId":"208","severity":1,"message":"219","line":159,"column":38,"nodeType":"210","messageId":"211","endLine":159,"endColumn":40},{"ruleId":"199","severity":1,"message":"220","line":29,"column":6,"nodeType":"201","messageId":"202","endLine":29,"endColumn":19},{"ruleId":"199","severity":1,"message":"221","line":12,"column":9,"nodeType":"201","messageId":"202","endLine":12,"endColumn":23},{"ruleId":"199","severity":1,"message":"222","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"199","severity":1,"message":"223","line":3,"column":18,"nodeType":"201","messageId":"202","endLine":3,"endColumn":29},{"ruleId":"199","severity":1,"message":"224","line":4,"column":9,"nodeType":"201","messageId":"202","endLine":4,"endColumn":25},{"ruleId":"199","severity":1,"message":"225","line":35,"column":6,"nodeType":"201","messageId":"202","endLine":35,"endColumn":28},{"ruleId":"199","severity":1,"message":"220","line":20,"column":6,"nodeType":"201","messageId":"202","endLine":20,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":52,"column":29,"nodeType":"217","endLine":52,"endColumn":117},{"ruleId":"215","severity":1,"message":"216","line":9,"column":9,"nodeType":"217","endLine":10,"endColumn":115},{"ruleId":"215","severity":1,"message":"216","line":8,"column":10,"nodeType":"217","endLine":8,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":17,"column":8,"nodeType":"228","endLine":17,"endColumn":22,"suggestions":"229"},{"ruleId":"199","severity":1,"message":"230","line":1,"column":9,"nodeType":"201","messageId":"202","endLine":1,"endColumn":17},"@typescript-eslint/no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'getAuthUserData' is defined but never used.","no-native-reassign",["231"],"no-negated-in-lhs",["232"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Friend' is defined but never used.","'FriendsType' is defined but never used.","'messagesElement' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CountryType' is defined but never used.","Expected '===' and instead saw '=='.","'PostPropsType' is defined but never used.","'newPostElement' is assigned a value but never used.","'React' is defined but never used.","'useSelector' is defined but never used.","'ProfilePropsType' is defined but never used.","'GetProfileResponseType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},"Update the dependencies array to be: [props.status, status]",{"range":"236","text":"237"},[464,478],"[props.status, status]"]