[{"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx":"1","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx":"2","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx":"3","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx":"4","C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts":"5","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx":"6","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx":"7","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx":"8","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"9","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"10","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"11","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx":"12","C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx":"13","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"14","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx":"15","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\store.ts":"16","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Sidebar\\friend.tsx":"17","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts":"18","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts":"19","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts":"20","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts":"21","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"22","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx":"23","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx":"24","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts":"25","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx":"26","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx":"27","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx":"28","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts":"29","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx":"30","C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts":"31"},{"size":1654,"mtime":1616444650491,"results":"32","hashOfConfig":"33"},{"size":151,"mtime":1611702357671,"results":"34","hashOfConfig":"33"},{"size":2685,"mtime":1614355354281,"results":"35","hashOfConfig":"33"},{"size":1458,"mtime":1614980238889,"results":"36","hashOfConfig":"33"},{"size":425,"mtime":1608994354631,"results":"37","hashOfConfig":"33"},{"size":159,"mtime":1611702357840,"results":"38","hashOfConfig":"33"},{"size":478,"mtime":1616511715426,"results":"39","hashOfConfig":"33"},{"size":660,"mtime":1616418379815,"results":"40","hashOfConfig":"33"},{"size":540,"mtime":1613726806391,"results":"41","hashOfConfig":"33"},{"size":876,"mtime":1616510933345,"results":"42","hashOfConfig":"33"},{"size":1281,"mtime":1614357558660,"results":"43","hashOfConfig":"33"},{"size":152,"mtime":1611702357978,"results":"44","hashOfConfig":"33"},{"size":763,"mtime":1614283771265,"results":"45","hashOfConfig":"33"},{"size":456,"mtime":1613726806552,"results":"46","hashOfConfig":"33"},{"size":1275,"mtime":1613750319160,"results":"47","hashOfConfig":"33"},{"size":5489,"mtime":1614343772934,"results":"48","hashOfConfig":"33"},{"size":322,"mtime":1611822269863,"results":"49","hashOfConfig":"33"},{"size":2512,"mtime":1616265768177,"results":"50","hashOfConfig":"33"},{"size":2057,"mtime":1614357138199,"results":"51","hashOfConfig":"33"},{"size":811,"mtime":1614357558820,"results":"52","hashOfConfig":"33"},{"size":909,"mtime":1616715981408,"results":"53","hashOfConfig":"33"},{"size":2355,"mtime":1614357138236,"results":"54","hashOfConfig":"33"},{"size":2032,"mtime":1614355354408,"results":"55","hashOfConfig":"33"},{"size":4625,"mtime":1616715086406,"results":"56","hashOfConfig":"33"},{"size":5139,"mtime":1616716503224,"results":"57","hashOfConfig":"33"},{"size":3226,"mtime":1616715140380,"results":"58","hashOfConfig":"33"},{"size":208,"mtime":1615756710483,"results":"59","hashOfConfig":"33"},{"size":1720,"mtime":1616511423309,"results":"60","hashOfConfig":"33"},{"size":1314,"mtime":1616418172895,"results":"61","hashOfConfig":"33"},{"size":1836,"mtime":1616444227685,"results":"62","hashOfConfig":"33"},{"size":997,"mtime":1616713315089,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"2o7mkq",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\reactProject\\sn-ts-example\\src\\App.tsx",["139"],"import React from \"react\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport \"./App.css\";\nimport Music from \"./Components/Music/Music\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport News from \"./Components/News/news\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Setting from \"./Components/Setting/Setting\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\"\n\n\ntype AppType = {}\n\n\nconst App: React.FC<AppType> = () => {\n    // const state = props.store.getState()\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n\n                    {/*Route - реактовская компонента, которая при совпадении с ее path позовет колбэк находящийся в ней*/}\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                    <Route path=\"/profile/:userId\" render={() => <ProfileContainer/>}/>\n                    <Route path=\"/news\" render={() => <News/>}/>\n                    <Route path=\"/music\" render={() => <Music/>}/>\n                    <Route path=\"/settings\" render={() => <Setting/>}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n}\n\n\nexport default App;",["140","141"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\News\\news.tsx",[],["142","143"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Navbar\\Navbar.tsx",["144","145"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\nimport Friend from \"../Sidebar/friend\";\r\nimport {FriendsType} from \"../../redux/store\";\r\n\r\ntype NavbarType = {\r\n    //friends: Array<FriendsType>\r\n}\r\n\r\nconst Navbar = (props: NavbarType) => {\r\n\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n\r\n{/*меняет url в браузере без перезакрузки страницы*/}\r\n                <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/dialogs\">Massages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                {/*<Friend friends={props.friends}/>*/}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\React\\reactProject\\sn-ts-example\\src\\reportWebVitals.ts",[],["146","147"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Setting\\Setting.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\Profile.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\Header.tsx",["148"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["149","150"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Music\\Music.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\index.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\Message\\Message.tsx",["151","152"],"import React from \"react\";\r\nimport s from \"./../Dialog.module.css\";\r\nimport {ActionType, RootStateType} from \"../../../redux/store\";\r\n\r\n\r\ntype MessagesType = {\r\n     id: number\r\n\r\n    messages: string\r\n    // newMessageText: string\r\n}\r\n\r\n\r\n\r\n\r\nconst Message: React.FC<MessagesType> = (props) => {\r\n\r\n    // let messagesElement = React.createRef<HTMLTextAreaElement>();\r\n    //\r\n    // let addMessages = () => {\r\n    //    props.dispatch(addMessagesActionCreator());\r\n    // }\r\n    //\r\n    // let onMessageChange = () => {\r\n    //     if (messagesElement.current) {\r\n    //         props.dispatch(onMessageChangeActionCreator(messagesElement.current.value));\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.messages}</div>\r\n            {/*<div>*/}\r\n            {/*    /!*<div className={s.addText}>*!/*/}\r\n            {/*    /!*    <textarea onChange={onMessageChange} ref={messagesElement} value={props.newMessageText}/>*!/*/}\r\n            {/*    /!*</div>*!/*/}\r\n            {/*    /!*<div className={s.addTextButton}>*!/*/}\r\n            {/*    /!*    <button onClick={addMessages}></button>*!/*/}\r\n            {/*    /!*</div>*!/*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\n\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\store.ts",["153"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Sidebar\\friend.tsx",["154"],"import React from \"react\";\r\nimport {FriendsType, RootStateType} from \"../../redux/state\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: Array<FriendsType>\r\n}\r\n\r\n\r\nconst Friend: React.FC<PropsType> = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            {props.friends[0].name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;",["155","156"],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\profilePage-reducer.ts",["157"],"import {ActionType} from \"./store\";\r\nimport {UsersType} from \"./users-reducer\";\r\n\r\n\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likes: string\r\n}\r\ntype ContactsType = {\r\n    facebook: string,\r\n    website: null,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: null,\r\n    github: string,\r\n    mainLink: null\r\n}\r\ntype PhotosType = {\r\n    small: string,\r\n    large: string\r\n}\r\nexport type ProfilePropsType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    \"lookingForAJob\": boolean,\r\n    \"lookingForAJobDescription\": string,\r\n    \"fullName\": string,\r\n    \"userId\": number,\r\n    \"photos\": PhotosType\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hey, why nobody love me\", likes: \"15\"},\r\n        {id: 2, message: \"It`s our new program! Hey\", likes: \"20\"},\r\n    ] as Array<PostsType>,\r\n    newPostText: \"\",\r\n    profile: {} as ProfilePropsType\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst profilePageReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 3,\r\n                message: state.newPostText,\r\n                likes: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n            case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPostsActionCreator = () => ({type: ADD_POST} as const)\r\nexport const setUserProfile = (profile: ProfilePropsType) => ({type: SET_USER_PROFILE, profile} as const)\r\nexport const onPostChangeActionCreator = (newText: string) => ({type: UPDATE_NEW_POST_TEXT, newText: newText} as const)\r\n\r\n\r\nexport default profilePageReducer;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\dialogsPage-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\sidebar-reducer.ts",["158"],"import {ActionType, SidebarType} from \"./store\";\r\n\r\nexport type FriendsType = {\r\n    id: number\r\n    age: number\r\n    name: string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nlet initialState = {\r\n    friends: [\r\n        {name: \"Andrew\", age: 32, id: 1},\r\n        {name: \"Sasha\", age: 33, id: 2},\r\n        {name: \"Sveta\", age: 29, id: 3},\r\n    ] as Array<FriendsType>,\r\n}\r\n\r\n// обьект initialState задает начальное значение state, если он не придет сразу\r\nconst sidebarReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","C:\\React\\reactProject\\sn-ts-example\\src\\redux\\Redux-store.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["159","160"],"import React from \"react\";\r\nimport {addPostsActionCreator, onPostChangeActionCreator} from \"../../../redux/profilePage-reducer\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {connect} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../../redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType, ProfilePageType} from \"../../../redux/store\";\r\n\r\n//самодельный контейнер\r\n// type MyPostsType = {\r\n//     store: StoreType\r\n// }\r\n// const MyPostsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState()\r\n//                 let addPosts = () => {\r\n//                     store.dispatch(addPostsActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text: string) => {\r\n//                     let action = onPostChangeActionCreator(text)\r\n//                     store.dispatch(action)\r\n//                 }\r\n//                 return (\r\n//                     <MyPosts\r\n//                         onPostChangeActionCreator={onPostChange}\r\n//                         addPosts={addPosts}\r\n//                         posts={state.profilePage.posts}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                     />\r\n//                 )\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    newPostText: string\r\n    posts: Array<PostsType>\r\n}\r\ntype mapDispatchToPropsType = {\r\n    onPostChangeActionCreator: (text: string) => void\r\n    addPosts: () => void\r\n\r\n}\r\nexport type MyPostsPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\n// подключили react-redux\r\nlet mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        onPostChangeActionCreator: (text: string) => {\r\n            let action = onPostChangeActionCreator(text)\r\n            dispatch(action)\r\n        },\r\n        addPosts: () => dispatch(addPostsActionCreator())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n//\r\n// export default MyPostsContainer;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Dialogs\\DialogsContainer.tsx",["161"],"import React from \"react\";\r\nimport {addMessagesActionCreator, DialogsPageType, onMessageChangeActionCreator} from \"../../redux/dialogsPage-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AllAppStateType} from \"../../redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n//самодельный контейнер\r\n// type PropsType = {\r\n//     store: StoreType\r\n// }\r\n// const DialogsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState().dialogsPage\r\n//                     let addMessages = () => {\r\n//                         store.dispatch(addMessagesActionCreator());\r\n//                     }\r\n//                     let onMessageChange = (body: string) => {\r\n//                         store.dispatch(onMessageChangeActionCreator(body));\r\n//                     }\r\n//                     return (\r\n//                         <Dialogs addMessages={addMessages} onMessageChange={onMessageChange} dialogsPage={state}/>\r\n//                     )\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//\r\n//     )\r\n// }\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addMessages: () => void\r\n    onMessageChange: (body: string) => void\r\n\r\n}\r\nexport type DialogsPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\n// подключили react-redux\r\nlet mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addMessages: () => dispatch(addMessagesActionCreator()),\r\n        onMessageChange: (body: string) => dispatch(onMessageChangeActionCreator(body))\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n\r\n\r\n\r\n","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\UsersContainer.tsx",["162","163","164","165"],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\users-reducer.ts",["166","167","168","169"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Users\\Users.tsx",["170","171","172"],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Common\\Preloader\\Preloader.tsx",["173"],"import React from \"react\";\r\nimport preloader from \"../../../asseds/images/Pinwheel.gif\";\r\n\r\n\r\nlet Preloader = () => {\r\n\r\n    return <>\r\n         <img src={preloader}/>\r\n    </>\r\n}\r\n\r\nexport default Preloader;","C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Profile\\ProfileContainer.tsx",["174"],"C:\\React\\reactProject\\sn-ts-example\\src\\redux\\auth-reducer.ts",[],"C:\\React\\reactProject\\sn-ts-example\\src\\Components\\Header\\HeaderContainer.tsx",["175"],"C:\\React\\reactProject\\sn-ts-example\\src\\API\\API.ts",[],{"ruleId":"176","severity":1,"message":"177","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":15},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"180","replacedBy":"184"},{"ruleId":"182","replacedBy":"185"},{"ruleId":"176","severity":1,"message":"186","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"180","replacedBy":"188"},{"ruleId":"182","replacedBy":"189"},{"ruleId":"176","severity":1,"message":"190","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":18,"column":17,"nodeType":"193","endLine":20,"endColumn":53},{"ruleId":"191","severity":1,"message":"192","line":23,"column":17,"nodeType":"193","endLine":23,"endColumn":57},{"ruleId":"176","severity":1,"message":"194","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":19},{"ruleId":"176","severity":1,"message":"195","line":3,"column":21,"nodeType":"178","messageId":"179","endLine":3,"endColumn":34},{"ruleId":"176","severity":1,"message":"196","line":51,"column":6,"nodeType":"178","messageId":"179","endLine":51,"endColumn":33},{"ruleId":"176","severity":1,"message":"195","line":2,"column":22,"nodeType":"178","messageId":"179","endLine":2,"endColumn":35},{"ruleId":"180","replacedBy":"197"},{"ruleId":"182","replacedBy":"198"},{"ruleId":"176","severity":1,"message":"199","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"200","line":1,"column":21,"nodeType":"178","messageId":"179","endLine":1,"endColumn":32},{"ruleId":"176","severity":1,"message":"201","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"202","line":7,"column":20,"nodeType":"178","messageId":"179","endLine":7,"endColumn":35},{"ruleId":"176","severity":1,"message":"201","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"203","line":7,"column":5,"nodeType":"178","messageId":"179","endLine":7,"endColumn":18},{"ruleId":"176","severity":1,"message":"204","line":9,"column":5,"nodeType":"178","messageId":"179","endLine":9,"endColumn":23},{"ruleId":"176","severity":1,"message":"205","line":10,"column":5,"nodeType":"178","messageId":"179","endLine":10,"endColumn":13},{"ruleId":"176","severity":1,"message":"206","line":17,"column":9,"nodeType":"178","messageId":"179","endLine":17,"endColumn":17},{"ruleId":"176","severity":1,"message":"207","line":36,"column":6,"nodeType":"178","messageId":"179","endLine":36,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":93,"column":61,"nodeType":"210","messageId":"211","endLine":93,"endColumn":63},{"ruleId":"208","severity":1,"message":"212","line":140,"column":38,"nodeType":"210","messageId":"211","endLine":140,"endColumn":40},{"ruleId":"208","severity":1,"message":"212","line":151,"column":38,"nodeType":"210","messageId":"211","endLine":151,"endColumn":40},{"ruleId":"176","severity":1,"message":"206","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":17},{"ruleId":"176","severity":1,"message":"190","line":21,"column":6,"nodeType":"178","messageId":"179","endLine":21,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":53,"column":29,"nodeType":"193","endLine":53,"endColumn":117},{"ruleId":"191","severity":1,"message":"192","line":8,"column":10,"nodeType":"193","endLine":8,"endColumn":32},{"ruleId":"176","severity":1,"message":"199","line":7,"column":9,"nodeType":"178","messageId":"179","endLine":7,"endColumn":18},{"ruleId":"176","severity":1,"message":"190","line":29,"column":6,"nodeType":"178","messageId":"179","endLine":29,"endColumn":19},"@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","no-native-reassign",["213"],"no-negated-in-lhs",["214"],["213"],["214"],"'Friend' is defined but never used.","'FriendsType' is defined but never used.",["213"],["214"],"'PostPropsType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ActionType' is defined but never used.","'RootStateType' is defined but never used.","'ProfilePageReducerPropsType' is defined but never used.",["213"],["214"],"'UsersType' is defined but never used.","'SidebarType' is defined but never used.","'React' is defined but never used.","'ProfilePageType' is defined but never used.","'setIsFetching' is defined but never used.","'setTotalUsersCount' is defined but never used.","'setUsers' is defined but never used.","'usersAPI' is defined but never used.","'CountryType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]